{
  "openapi": "3.0.0",
  "info": {
    "title": "Public Api v3",
    "version": "3.0",
    "description": "Build the best experience of digital signature through your own platform. Increase your conversion rates, leverage your data and reduce your costs with Yousign API.",
    "contact": {
      "name": "Support",
      "email": "contact@yousign.com"
    }
  },
  "servers": [
    {
      "url": "https://api-sandbox.yousign.app/v3",
      "description": "Sandbox URL"
    },
    {
      "url": "https://api.yousign.app/v3",
      "description": "Production URL"
    },
    {
      "url": "https://dev.yousign.io/api_public/v3"
    }
  ],
  "paths": {
    "/signature_requests": {
      "post": {
        "summary": "Initiate a new signature request",
        "operationId": "post-signature_requests",
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureRequest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "description": "Initiate a new signature request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "description": "Name of the signature request"
                  },
                  "delivery_mode": {
                    "type": "string",
                    "enum": [
                      "none",
                      "email"
                    ],
                    "description": "Delivery mode to notify signers."
                  },
                  "ordered_signers": {
                    "type": "boolean",
                    "description": "Enable an ordered workflow, each signer will be requested to sign in a sequential order"
                  },
                  "reminder_settings": {
                    "type": "object",
                    "description": "Enable automatic reminders for pending signers.",
                    "nullable": true,
                    "properties": {
                      "interval_in_days": {
                        "type": "number",
                        "enum": [
                          1,
                          2,
                          7,
                          14
                        ]
                      },
                      "max_occurrences": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 10,
                        "example": 5
                      }
                    },
                    "required": [
                      "interval_in_days",
                      "max_occurrences"
                    ]
                  },
                  "timezone": {
                    "type": "string",
                    "example": "Europe/Paris",
                    "description": "tz database format"
                  },
                  "email_custom_note": {
                    "type": "string",
                    "maxLength": 500,
                    "example": "Please sign these documents as soon as possible.",
                    "description": "A custom note added to emails sent to signers."
                  },
                  "expiration_date": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                    "description": "Due date of the signature request (yyyy-mm-dd). Default to 6 month after the activation."
                  },
                  "template_id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "description": "Create a signature request from an existing template. This parameter is not available in Sandbox."
                  },
                  "external_id": {
                    "type": "string",
                    "pattern": "^[\\w\\-@.%+]+$",
                    "maxLength": 255,
                    "description": "Store a custom id that will be added to webhooks & appended to redirect urls.",
                    "nullable": true
                  },
                  "branding_id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
                    "description": "Use a specific branding to customize the signature experience.",
                    "nullable": true
                  },
                  "custom_experience_id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
                    "description": "Use a specific Custom Experience to customize the signature experience.",
                    "nullable": true
                  },
                  "documents": {
                    "deprecated": true,
                    "type": "array",
                    "maxItems": 5,
                    "uniqueItems": true,
                    "description": "You can directly attach orphan documents to the signature request.",
                    "items": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                      "example": "89120884-d29a-4b1a-ac7b-a9e73a872795"
                    }
                  },
                  "signers": {
                    "deprecated": true,
                    "type": "array",
                    "description": "Can only be used if you add documents at the same time.",
                    "items": {
                      "description": "Create signers",
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/SignatureRequest_SignerFromInfoInput"
                        },
                        {
                          "$ref": "#/components/schemas/SignatureRequest_SignerFromUserIdInput"
                        },
                        {
                          "$ref": "#/components/schemas/SignatureRequest_SignerFromContactIdInput"
                        }
                      ]
                    }
                  },
                  "workspace_id": {
                    "type": "string",
                    "description": "Scope the signature request to a specific workspace",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
                    "nullable": true
                  }
                },
                "required": [
                  "name",
                  "delivery_mode"
                ]
              }
            }
          }
        },
        "tags": [
          "Signature Request"
        ]
      },
      "get": {
        "summary": "List signature requests",
        "operationId": "get-signature_requests",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SignatureRequest"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        },
        "description": "List signature requests",
        "tags": [
          "Signature Request"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "ongoing",
                "done",
                "deleted",
                "expired",
                "canceled",
                "approval",
                "rejected"
              ]
            },
            "in": "query",
            "name": "status",
            "description": "Filter by status"
          },
          {
            "$ref": "#/components/parameters/AfterCursor"
          },
          {
            "schema": {
              "type": "string",
              "example": "an_external_id",
              "pattern": "^[\\w\\-@.%+]+$"
            },
            "in": "query",
            "name": "external_id",
            "description": "Filter by external_id"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "public_api"
                ],
                "default": "public_api"
              }
            },
            "in": "query",
            "name": "source[]",
            "description": "Filter by source"
          }
        ]
      },
      "parameters": []
    },
    "/signature_requests/{signatureRequestId}/documents": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795"
          },
          "name": "signatureRequestId",
          "in": "path",
          "description": "Signature Request Id",
          "required": true
        }
      ],
      "post": {
        "summary": "Add document to a signature request",
        "operationId": "post-signature_requests-signatureRequestId-documents",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Binary file"
                  },
                  "nature": {
                    "type": "string",
                    "enum": [
                      "attachment",
                      "signable_document"
                    ]
                  },
                  "password": {
                    "type": "string",
                    "example": "MyPa$$word"
                  },
                  "initials": {
                    "nullable": true,
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/InitialsArea"
                      }
                    ]
                  },
                  "parse_anchors": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "file",
                  "nature"
                ]
              }
            }
          },
          "description": "Sending file with metadata"
        },
        "description": "Add document to a signature request",
        "tags": [
          "Document"
        ]
      },
      "get": {
        "summary": "List signature request documents",
        "operationId": "get-signature_requests-signatureRequestId-documents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "description": "List signature request documents",
        "tags": [
          "Document"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "attachment",
                "signable_document"
              ]
            },
            "in": "query",
            "name": "nature",
            "description": "filter by nature"
          }
        ]
      }
    },
    "/signature_requests/{signatureRequestId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "signatureRequestId",
          "in": "path",
          "required": true,
          "description": "Signature Request Id"
        }
      ],
      "get": {
        "summary": "Fetch a signature request",
        "tags": [
          "Signature Request"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureRequest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "get-signature_requests-signatureRequestId",
        "description": "Fetch a signature request"
      },
      "patch": {
        "summary": "Update a Signature Request",
        "operationId": "patch-signature_requests-signatureRequestId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureRequest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128
                  },
                  "delivery_mode": {
                    "type": "string",
                    "enum": [
                      "none",
                      "email"
                    ],
                    "description": "Delivery mode to notify signers"
                  },
                  "ordered_signers": {
                    "type": "boolean",
                    "description": "Enable an ordered workflow, each signer will be requested to sign in a sequential order"
                  },
                  "reminder_settings": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "interval_in_days": {
                        "type": "number",
                        "enum": [
                          1,
                          2,
                          7,
                          14
                        ]
                      },
                      "max_occurrences": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 10,
                        "example": 5
                      }
                    },
                    "required": [
                      "interval_in_days",
                      "max_occurrences"
                    ]
                  },
                  "timezone": {
                    "type": "string",
                    "example": "Europe/Paris",
                    "description": "tz database format"
                  },
                  "email_custom_note": {
                    "type": "string",
                    "maxLength": 500,
                    "example": "Please sign these documents as soon as possible.",
                    "nullable": true
                  },
                  "expiration_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Due date of the signature request (yyyy-mm-dd).",
                    "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
                  },
                  "external_id": {
                    "type": "string",
                    "pattern": "^[\\w\\-@.%+]+$",
                    "maxLength": 255,
                    "nullable": true
                  },
                  "branding_id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
                    "nullable": true
                  },
                  "custom_experience_id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
                    "description": "Use a specific Custom Experience to customize the signature experience.",
                    "nullable": true
                  },
                  "workspace_id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
                    "description": "Transfer the Signature Request into a given Workspace."
                  }
                }
              }
            }
          }
        },
        "description": "Update a Signature Request",
        "tags": [
          "Signature Request"
        ]
      },
      "delete": {
        "summary": "Delete a signature request",
        "operationId": "delete-signature_requests-signatureRequestId",
        "description": "Delete a signature request (in draft status)",
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "tags": [
          "Signature Request"
        ]
      }
    },
    "/signature_requests/{signatureRequestId}/followers": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "signatureRequestId",
          "in": "path",
          "required": true,
          "description": "Signature Request Id"
        }
      ],
      "post": {
        "summary": "Create new followers",
        "operationId": "post-signature_requests-signatureRequestId-followers",
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "array",
                  "x-examples": {
                    "example-1": {
                      "followers": [
                        {
                          "email": "john.doe@example.com",
                          "locale": "fr"
                        },
                        {
                          "email": "jane.doe@example.com",
                          "locale": "fr"
                        }
                      ]
                    }
                  },
                  "items": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                      },
                      "locale": {
                        "$ref": "#/components/schemas/Locale"
                      }
                    },
                    "required": [
                      "email",
                      "locale"
                    ]
                  }
                },
                "examples": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "description": "Create new followers",
        "tags": [
          "Follower"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "john.doe@example.com"
                    },
                    "locale": {
                      "$ref": "#/components/schemas/Locale"
                    }
                  },
                  "required": [
                    "email",
                    "locale"
                  ]
                }
              }
            }
          },
          "description": "A list of Follower objects to be added to the signature request."
        }
      }
    },
    "/signature_requests/{signatureRequestId}/approvers": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "signatureRequestId",
          "in": "path",
          "description": "Signature Request Id",
          "required": true
        }
      ],
      "post": {
        "summary": "Create a new approver",
        "operationId": "post-signature_requests-signatureRequestId-approvers",
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Approver",
                  "type": "object",
                  "title": "Approver",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "minLength": 1,
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                      "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "initiated",
                        "notified",
                        "approved",
                        "rejected"
                      ]
                    },
                    "info": {
                      "type": "object",
                      "required": [
                        "first_name",
                        "last_name",
                        "email",
                        "phone_number",
                        "locale"
                      ],
                      "properties": {
                        "first_name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "last_name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "email": {
                          "type": "string",
                          "minLength": 1,
                          "format": "email"
                        },
                        "phone_number": {
                          "type": "string",
                          "minLength": 1,
                          "description": "E.164 format.",
                          "nullable": true
                        },
                        "locale": {
                          "$ref": "#/components/schemas/Locale"
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "status",
                    "info"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "description": "Create a new approver from scratch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "description": "Create a new approver from scratch",
                    "properties": {
                      "info": {
                        "type": "object",
                        "required": [
                          "first_name",
                          "last_name",
                          "email",
                          "locale"
                        ],
                        "properties": {
                          "first_name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "last_name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "email": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "E.164 format.",
                            "minLength": 1,
                            "nullable": true
                          },
                          "locale": {
                            "$ref": "#/components/schemas/Locale"
                          }
                        }
                      }
                    },
                    "required": [
                      "info"
                    ]
                  },
                  {
                    "properties": {
                      "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                      }
                    },
                    "description": "Create a new approver from an existing user",
                    "required": [
                      "user_id"
                    ]
                  },
                  {
                    "properties": {
                      "contact_id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "format": "uuid",
                        "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744"
                      }
                    },
                    "description": "Create a new approver from an existing contact",
                    "required": [
                      "contact_id"
                    ]
                  },
                  {
                    "properties": {
                      "signer_id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "format": "uuid",
                        "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744"
                      }
                    },
                    "description": "Create a new approver from an existing signer",
                    "required": [
                      "signer_id"
                    ]
                  }
                ],
                "type": "object"
              }
            }
          },
          "description": "An Approver object to be added to the signature request."
        },
        "tags": [
          "Approver"
        ]
      }
    },
    "/signature_requests/{signatureRequestId}/approvers/{approverId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "signatureRequestId",
          "in": "path",
          "description": "Signature Request Id",
          "required": true
        },
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "approverId",
          "in": "path",
          "description": "Approver Id",
          "required": true
        }
      ],
      "get": {
        "summary": "Get an approver",
        "operationId": "get-signature_requests-signatureRequestId-approvers-approverId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1approvers/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "tags": [
          "Approver"
        ]
      },
      "patch": {
        "description": "Update an Approver",
        "operationId": "patch-signature_requests-signatureRequestId-approvers-approverId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1approvers/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "email": {
                        "type": "string",
                        "minLength": 1,
                        "format": "email"
                      },
                      "phone_number": {
                        "type": "string",
                        "minLength": 1,
                        "description": "E.164 format"
                      },
                      "locale": {
                        "$ref": "#/components/schemas/Locale"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Approver"
        ]
      }
    },
    "/signature_requests/{signatureRequestId}/signers": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "signatureRequestId",
          "in": "path",
          "required": true,
          "description": "Signature Request Id"
        }
      ],
      "post": {
        "summary": "Create a new signer",
        "operationId": "post-signature_requests-signatureRequestId-signers",
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Signer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "description": "Create a new signer",
        "tags": [
          "Signer"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "oneOf": [
                  {
                    "description": "Create a new signer from scratch",
                    "properties": {
                      "info": {
                        "type": "object",
                        "required": [
                          "first_name",
                          "last_name",
                          "email",
                          "locale"
                        ],
                        "properties": {
                          "first_name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "last_name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "email": {
                            "type": "string",
                            "minLength": 1,
                            "format": "email"
                          },
                          "phone_number": {
                            "type": "string",
                            "minLength": 1,
                            "description": "E.164 format. Becomes mandatory if `signature_authentication_mode` requires a phone number.",
                            "nullable": true
                          },
                          "locale": {
                            "$ref": "#/components/schemas/Locale"
                          }
                        }
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/FieldsInput"
                        }
                      },
                      "insert_after_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
                        "description": "Insert just after the position of the specified signer id",
                        "nullable": true
                      },
                      "signature_level": {
                        "type": "string",
                        "default": "electronic_signature",
                        "enum": [
                          "electronic_signature",
                          "advanced_electronic_signature",
                          "electronic_signature_with_qualified_certificate",
                          "qualified_electronic_signature_mode_1"
                        ]
                      },
                      "signature_authentication_mode": {
                        "type": "string",
                        "default": null,
                        "enum": [
                          null,
                          "otp_email",
                          "otp_sms",
                          "no_otp"
                        ],
                        "nullable": true
                      },
                      "redirect_urls": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "nullable": true
                          },
                          "error": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "nullable": true
                          }
                        }
                      },
                      "custom_text": {
                        "type": "object",
                        "properties": {
                          "request_subject": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 150,
                            "nullable": true
                          },
                          "request_body": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 500,
                            "nullable": true
                          },
                          "reminder_subject": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 150,
                            "nullable": true
                          },
                          "reminder_body": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 500,
                            "nullable": true
                          }
                        }
                      }
                    },
                    "required": [
                      "info",
                      "signature_level"
                    ]
                  },
                  {
                    "description": "Create a new signer from an existing user",
                    "properties": {
                      "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
                        "description": "Create signer from an existing user"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/FieldsInput"
                        }
                      },
                      "insert_after_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
                        "description": "Insert just after the position of the specified signer id.",
                        "nullable": true
                      },
                      "signature_level": {
                        "type": "string",
                        "default": "electronic_signature",
                        "enum": [
                          "electronic_signature",
                          "advanced_electronic_signature",
                          "electronic_signature_with_qualified_certificate",
                          "qualified_electronic_signature_mode_1"
                        ]
                      },
                      "redirect_urls": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "nullable": true
                          },
                          "error": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "nullable": true
                          }
                        }
                      },
                      "custom_text": {
                        "type": "object",
                        "properties": {
                          "request_subject": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 150,
                            "nullable": true
                          },
                          "request_body": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 500,
                            "nullable": true
                          },
                          "reminder_subject": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 150,
                            "nullable": true
                          },
                          "reminder_body": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 500,
                            "nullable": true
                          }
                        }
                      }
                    },
                    "required": [
                      "user_id"
                    ]
                  },
                  {
                    "description": "Create a new signer from an existing contact",
                    "properties": {
                      "contact_id": {
                        "type": "string",
                        "description": "Create signer from an existing contact",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "example": "ddecfb85-8a45-4254-b940-6171b8df0a90",
                        "format": "uuid"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/FieldsInput"
                        }
                      },
                      "insert_after_id": {
                        "type": "string",
                        "description": "Insert just after the position of the specified signer id.",
                        "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "format": "uuid",
                        "nullable": true
                      },
                      "signature_level": {
                        "type": "string",
                        "default": "electronic_signature",
                        "enum": [
                          "electronic_signature",
                          "advanced_electronic_signature",
                          "electronic_signature_with_qualified_certificate",
                          "qualified_electronic_signature_mode_1"
                        ]
                      },
                      "redirect_urls": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "nullable": true
                          },
                          "error": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "nullable": true
                          }
                        }
                      },
                      "custom_text": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "request_subject": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 150,
                            "nullable": true
                          },
                          "request_body": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 500,
                            "nullable": true
                          },
                          "reminder_subject": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 150,
                            "nullable": true
                          },
                          "reminder_body": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 500,
                            "nullable": true
                          }
                        }
                      }
                    },
                    "required": [
                      "contact_id"
                    ]
                  }
                ],
                "type": "object"
              }
            }
          }
        }
      },
      "get": {
        "summary": "List signature request signers",
        "tags": [
          "Signer"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Signer"
                  }
                },
                "examples": {}
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "get-signature_requests-signatureRequestId-signers",
        "description": "List signers from a signature request"
      }
    },
    "/signature_requests/{signatureRequestId}/activate": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "signatureRequestId",
          "in": "path",
          "required": true,
          "description": "Signature Request Id"
        }
      ],
      "post": {
        "summary": "Activate a signature request",
        "operationId": "post-signature_requests-signatureRequestId-signatures",
        "responses": {
          "201": {
            "description": "The signature request has been activated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureRequestActivated"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "description": "Activate a signature request",
        "tags": [
          "Signature Request"
        ]
      }
    },
    "/signature_requests/{signatureRequestId}/cancel": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "signatureRequestId",
          "in": "path",
          "required": true,
          "description": "Signature Request Id"
        }
      ],
      "post": {
        "summary": "Cancel a signature request",
        "operationId": "post-signature_requests-signatureRequestId-cancel",
        "responses": {
          "201": {
            "description": "The signature request has been canceled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureRequest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "tags": [
          "Signature Request"
        ],
        "description": "Cancel a signature request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "enum": [
                      "contractualization_aborted",
                      "errors_in_document",
                      "other"
                    ]
                  },
                  "custom_note": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 500
                  }
                },
                "required": [
                  "reason",
                  "custom_note"
                ]
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List all users",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "operationId": "get-users",
        "description": "List all users",
        "parameters": [
          {
            "$ref": "#/components/parameters/AfterCursor"
          }
        ]
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "format": "uuid"
          },
          "name": "signerId",
          "in": "path",
          "required": true,
          "description": "Signer id"
        },
        {
          "schema": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "example": "62120884-d29a-4b1a-ac6b-a9e73a872734",
            "format": "uuid"
          },
          "name": "signatureRequestId",
          "in": "path",
          "required": true,
          "description": "Signature request id"
        }
      ],
      "get": {
        "summary": "Get a signer",
        "tags": [
          "Signer"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignerWithSignatureLink"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "get-signers-signersId",
        "description": "Get a signer"
      },
      "delete": {
        "summary": "Delete a signer",
        "tags": [
          "Signer"
        ],
        "operationId": "delete-signature_requests-signatureRequestId-signers-signerId",
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "description": "Delete a signer"
      },
      "patch": {
        "summary": "Update a signer",
        "operationId": "patch-signature_requests-signatureRequestId-signers-signerId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Signer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "description": "Update a signer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "email": {
                        "type": "string",
                        "minLength": 1,
                        "format": "email"
                      },
                      "phone_number": {
                        "type": "string",
                        "minLength": 1,
                        "description": "E.164 format"
                      },
                      "locale": {
                        "$ref": "#/components/schemas/Locale"
                      }
                    }
                  },
                  "insert_after_id": {
                    "type": "string",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "format": "uuid",
                    "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
                    "nullable": true
                  },
                  "signature_level": {
                    "type": "string",
                    "default": "electronic_signature",
                    "enum": [
                      "electronic_signature",
                      "advanced_electronic_signature",
                      "electronic_signature_with_qualified_certificate",
                      "qualified_electronic_signature_mode_1"
                    ]
                  },
                  "signature_authentication_mode": {
                    "type": "string",
                    "default": null,
                    "enum": [
                      null,
                      "otp_email",
                      "otp_sms",
                      "no_otp"
                    ],
                    "nullable": true
                  },
                  "redirect_urls": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "nullable": true
                      },
                      "error": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "nullable": true
                      }
                    }
                  },
                  "custom_text": {
                    "type": "object",
                    "properties": {
                      "request_subject": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 150,
                        "nullable": true
                      },
                      "request_body": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 500,
                        "nullable": true
                      },
                      "reminder_subject": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 150,
                        "nullable": true
                      },
                      "reminder_body": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 500,
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Signer"
        ]
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}/send_reminder": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "format": "uuid"
          },
          "name": "signerId",
          "in": "path",
          "required": true,
          "description": "Signer id"
        },
        {
          "schema": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "example": "62120884-d29a-4b1a-ac6b-a9e73a872734",
            "format": "uuid"
          },
          "name": "signatureRequestId",
          "in": "path",
          "required": true,
          "description": "Signature request id"
        }
      ],
      "post": {
        "summary": "Send manual reminder to signer",
        "operationId": "post-signature_requests-signatureRequestId-signers-signerId-send_reminder",
        "responses": {
          "201": {
            "description": "The signer has been reminded"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "tags": [
          "Signature Request"
        ],
        "description": "Send manual reminder to signer"
      }
    },
    "/signature_requests/{signatureRequestId}/documents/{documentId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "ab7d0d23-671a-45b8-a4c6-23f43cc88ccd",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "signatureRequestId",
          "in": "path",
          "required": true,
          "description": "Signature request Id"
        },
        {
          "schema": {
            "type": "string",
            "example": "5b622767-befa-44b4-94df-adda0c98cfc2",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "documentId",
          "in": "path",
          "required": true,
          "description": "Document Id"
        }
      ],
      "get": {
        "summary": "Get a document",
        "tags": [
          "Document"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "get-signature_requests-:signatureRequestId-documents-:-documentId",
        "description": "Get a document"
      },
      "delete": {
        "summary": "Delete a document",
        "operationId": "delete-signature_requests-signatureRequestId-documents-documentId",
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "description": "Delete a document",
        "tags": [
          "Document"
        ]
      },
      "patch": {
        "summary": "Update a document",
        "operationId": "patch-signature_requests-signatureRequestId-documents-documentId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "description": "Update a document",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nature": {
                    "type": "string",
                    "enum": [
                      "attachment",
                      "signable_document"
                    ]
                  },
                  "insert_after_id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
                    "description": "Insert just after the position of the specified document id",
                    "nullable": true
                  },
                  "password": {
                    "type": "string",
                    "description": "The password required to unlock the document if it is protected",
                    "example": "MyPa$$word"
                  },
                  "initials": {
                    "nullable": true,
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/InitialsArea"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ]
      }
    },
    "/signature_requests/{signatureRequestId}/documents/{documentId}/replace": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "ab7d0d23-671a-45b8-a4c6-23f43cc88ccd",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "signatureRequestId",
          "in": "path",
          "required": true,
          "description": "Signature Request Id"
        },
        {
          "schema": {
            "type": "string",
            "example": "5b622767-befa-44b4-94df-adda0c98cfc2",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "documentId",
          "in": "path",
          "required": true,
          "description": "Document Id"
        }
      ],
      "post": {
        "summary": "Replace a document",
        "operationId": "post-signature_requests-signatureRequestId-documents-documentId-replace",
        "responses": {
          "201": {
            "description": "The document has been replaced.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "description": "Replace a document in a signature request",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "tags": [
          "Document"
        ]
      }
    },
    "/signature_requests/{signatureRequestId}/documents/{documentId}/download": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "ab7d0d23-671a-45b8-a4c6-23f43cc88ccd",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "signatureRequestId",
          "in": "path",
          "required": true,
          "description": "Signature Request Id"
        },
        {
          "schema": {
            "type": "string",
            "example": "5b622767-befa-44b4-94df-adda0c98cfc2",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "documentId",
          "in": "path",
          "required": true,
          "description": "Document Id"
        }
      ],
      "get": {
        "summary": "Download a single Signature Request Document",
        "tags": [
          "Document"
        ],
        "responses": {
          "200": {
            "description": "Return an application/pdf document",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "get-signature_requests-signatureRequestId-documents-documents-id-download"
      }
    },
    "/signature_requests/{signatureRequestId}/reactivate": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "ab7d0d23-671a-45b8-a4c6-23f43cc88ccd",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "signatureRequestId",
          "in": "path",
          "required": true,
          "description": "Signature Request Id"
        }
      ],
      "post": {
        "summary": "Reactivate an expired signature request",
        "operationId": "post-signature_requests-signatureRequestId-reactivate",
        "responses": {
          "201": {
            "description": "The signature request has been reactivated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureRequest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "description": "Reactivate a signature request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "expiration_date": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                    "description": "Due date of the signature request (yyyy-mm-dd). Default to 6 month after the activation."
                  }
                },
                "required": [
                  "expiration_date"
                ]
              }
            }
          }
        },
        "tags": [
          "Signature Request"
        ]
      }
    },
    "/webhooks": {
      "post": {
        "summary": "Configure a new webhook",
        "operationId": "post-webhooks-subscriptions",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscription"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "description": "Configure a new webhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "endpoint": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Https target URL of the webhook"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "Lorem Ipsum",
                    "description": "Short description of the webhook",
                    "nullable": true
                  },
                  "sandbox": {
                    "type": "boolean",
                    "example": true
                  },
                  "subscribed_events": {
                    "oneOf": [
                      {
                        "description": "Specific events",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "signature_request.done",
                            "signature_request.activated",
                            "signature_request.reminder_executed",
                            "signature_request.expired",
                            "signature_request.approved",
                            "signer.done",
                            "signer.notified",
                            "signer.link_opened",
                            "signer.identification_blocked",
                            "signer.sender_contacted",
                            "signer.error",
                            "contact.created",
                            "approver.notified",
                            "approver.approved",
                            "approver.rejected",
                            "electronic_seal.error",
                            "electronic_seal.done"
                          ]
                        }
                      },
                      {
                        "description": "All events",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "*"
                          ]
                        }
                      }
                    ]
                  },
                  "secret_key": {
                    "type": "string",
                    "nullable": true,
                    "description": "Autogenerated 32 bytes key"
                  },
                  "scopes": {
                    "oneOf": [
                      {
                        "description": "Specific scopes",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "app",
                            "public_api",
                            "connector_salesforce_api",
                            "connector_hubspot_api"
                          ]
                        }
                      },
                      {
                        "description": "All scopes",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "*"
                          ]
                        }
                      }
                    ]
                  },
                  "auto_retry": {
                    "type": "boolean",
                    "description": "If a Webhook request fails for any reason, Yousign will retry the request 8 times using a back-off mechanism after: 2, 6, 30, 60, 300, 1080, 1440, 2880 min"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Is the webhook enabled ?"
                  }
                },
                "required": [
                  "endpoint",
                  "description",
                  "sandbox",
                  "subscribed_events",
                  "scopes",
                  "auto_retry",
                  "enabled"
                ]
              }
            }
          }
        },
        "tags": [
          "Webhook"
        ]
      },
      "parameters": [],
      "get": {
        "summary": "List webhooks",
        "operationId": "get-webhooks",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookSubscription"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        },
        "description": "List webhooks",
        "tags": [
          "Webhook"
        ]
      }
    },
    "/webhooks/{webhookId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "ab7d0d23-671a-45b8-a4c6-23f43cc88ccd",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "webhookId",
          "in": "path",
          "required": true,
          "description": "Webhook Id"
        }
      ],
      "get": {
        "summary": "Get a webhook",
        "tags": [
          "Webhook"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscription"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "get-webhooks-webhookId",
        "description": "Get a webhook"
      },
      "delete": {
        "summary": "Unsubscribe a webhook",
        "operationId": "delete-webhooks-webhookId",
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "description": "Unsubscribe a webhook",
        "tags": [
          "Webhook"
        ]
      },
      "patch": {
        "summary": "Update a webhook",
        "operationId": "patch-webhooks-webhookId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscription"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "endpoint": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Https target URL of the webhook"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "Lorem Ipsum",
                    "description": "Short description of the webhook",
                    "nullable": true
                  },
                  "sandbox": {
                    "type": "boolean",
                    "example": true
                  },
                  "subscribed_events": {
                    "oneOf": [
                      {
                        "description": "Specific events",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "signature_request.done",
                            "signature_request.activated",
                            "signature_request.reminder_executed",
                            "signature_request.expired",
                            "signature_request.approved",
                            "signer.done",
                            "signer.notified",
                            "signer.link_opened",
                            "signer.identification_blocked",
                            "signer.sender_contacted",
                            "signer.error",
                            "contact.created",
                            "approver.notified",
                            "approver.approved",
                            "approver.rejected",
                            "electronic_seal.error",
                            "electronic_seal.done"
                          ]
                        }
                      },
                      {
                        "description": "All events",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "*"
                          ]
                        }
                      }
                    ]
                  },
                  "secret_key": {
                    "type": "string",
                    "description": "Autogenerated 32 bytes key",
                    "nullable": true
                  },
                  "scopes": {
                    "oneOf": [
                      {
                        "description": "Specific scopes",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "app",
                            "public_api",
                            "connector_salesforce_api",
                            "connector_hubspot_api"
                          ]
                        }
                      },
                      {
                        "description": "All scopes",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "*"
                          ]
                        }
                      }
                    ]
                  },
                  "auto_retry": {
                    "type": "boolean",
                    "description": "If a Webhook request fails for any reason, Yousign will retry the request 8 times using a back-off mechanism after: 2, 6, 30, 60, 300, 1080, 1440, 2880 min"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Is the webhook enabled ?"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Webhook"
        ],
        "description": "Update a webhook"
      }
    },
    "/signature_requests/{signatureRequestId}/documents/download": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "signatureRequestId",
          "in": "path",
          "description": "Signature Request Id",
          "required": true
        }
      ],
      "get": {
        "summary": "Download signature request documents",
        "tags": [
          "Document"
        ],
        "responses": {
          "200": {
            "description": "Return an application/pdf or application/zip archive with all documents",
            "content": {
              "application/zip, application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "get-signature_requests-signatureRequestId-documents-download",
        "description": "Download signature request documents",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "current",
                "completed"
              ]
            },
            "in": "query",
            "name": "version",
            "description": "Specify documents version to download, \"completed\" is only available when the signature request status is \"done\"."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "archive",
            "description": "Force zip archive download"
          }
        ]
      }
    },
    "/signature_requests/{signatureRequestId}/audit_trails/download": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "name": "signatureRequestId",
          "in": "path",
          "description": "Signature Request Id",
          "required": true
        }
      ],
      "get": {
        "summary": "Download signature request audit trails",
        "responses": {
          "200": {
            "description": "Return an application/pdf or application/zip archive with all audit trails",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "get-signature_requests-signatureRequestId-audit-trails-download",
        "description": "Download signature request audit trails",
        "parameters": [],
        "tags": [
          "Signature Request"
        ]
      }
    },
    "/contacts": {
      "get": {
        "summary": "List all contacts",
        "tags": [
          "Contact"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contact"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "operationId": "get-contacts",
        "description": "List all contacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/AfterCursor"
          }
        ]
      },
      "post": {
        "summary": "Create a contact",
        "tags": [
          "Contact"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "post-contacts",
        "description": "Create a contact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "John",
                    "minLength": 1
                  },
                  "last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  },
                  "locale": {
                    "$ref": "#/components/schemas/Locale"
                  },
                  "phone_number": {
                    "type": "string",
                    "minLength": 1,
                    "description": "E.164 format"
                  },
                  "company_name": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Yousign SAS",
                    "maxLength": 255
                  },
                  "job_title": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "Developer"
                  },
                  "address_line_1": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "34 Rue Malfilatre"
                  },
                  "address_line_2": {
                    "type": "string",
                    "example": "1st floor",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "address_city": {
                    "type": "string",
                    "example": "Caen",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "address_postal_code": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "14000"
                  },
                  "address_country": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "France"
                  },
                  "workspace_id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "69120884-d29a-4b1a-ac7b-a9e73a872795",
                    "nullable": true
                  }
                },
                "required": [
                  "first_name",
                  "last_name",
                  "email",
                  "locale"
                ]
              }
            }
          }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}/audit_trails/download": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "example": "69120884-d29a-4b1a-ac7b-a9e73a872795"
          },
          "name": "signerId",
          "in": "path",
          "required": true,
          "description": "Signer Id"
        },
        {
          "schema": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "format": "uuid",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872796"
          },
          "name": "signatureRequestId",
          "in": "path",
          "required": true,
          "description": "Signature request Id"
        }
      ],
      "get": {
        "summary": "Download audit trail PDF",
        "tags": [
          "Signer"
        ],
        "responses": {
          "200": {
            "description": "Audit trail PDF",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "get-signers-signerId-audit_trails-download",
        "description": "Download audit trail PDF"
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}/audit_trails": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "format": "uuid"
          },
          "name": "signerId",
          "in": "path",
          "required": true,
          "description": "Signer id"
        },
        {
          "schema": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "example": "62120884-d29a-4b1a-ac6b-a9e73a872734",
            "format": "uuid"
          },
          "name": "signatureRequestId",
          "in": "path",
          "required": true,
          "description": "Signature request id"
        }
      ],
      "get": {
        "summary": "Get signer audit trail",
        "tags": [
          "Signer"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "sender": {
                        "id": "3409ab3f-9295-4a69-9923-e9d32d9533d6",
                        "type": "User",
                        "email": "johnny.wallyday@example.com",
                        "last_name": "Wallyday",
                        "first_name": "Johnny",
                        "ip_address": "172.18.0.1",
                        "phone_number": "+447123456789"
                      },
                      "signer": {
                        "id": "44e4b0f8-55c9-48a9-803f-d89957525270",
                        "last_name": "Wallyday",
                        "first_name": "Johnny",
                        "ip_address": "172.18.0.1",
                        "phone_number": "+447123456789",
                        "email_address": "johnny.wallyday@example.com",
                        "consent_given_at": "2021-07-05 12:21:42.352630",
                        "signature_process_completed_at": "2021-07-05 12:21:43.656000"
                      },
                      "version": 5,
                      "documents": [
                        {
                          "id": "a9534a42-bbc1-4355-b270-58f315eda779",
                          "name": "sample.pdf",
                          "mime_type": "application/pdf",
                          "signatures": [
                            {
                              "hash": "4396f6a9f0554928f7bcc8e645a6441cb432c1606137ac8f3a735aef83946974",
                              "reason": "Signed by Johnny Wallyday",
                              "certificate": {
                                "dn": "CN=Yousign, C=FR, O=Yousign, OU=794513986, serialNumber=2019-02-15 10:07:35:938",
                                "oid": "1.2.250.1.302.1.7.1.0",
                                "hash": "69570e2d5cc2b352b2249ba32b16195722099a89aa35de71ee1e745f771d66c5",
                                "content": "-----BEGIN CERTIFICATE-----\nMIIF8DCCA9igAwIBAgIIdfWiF8OAJo0wDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBTSUdOMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTkwMjE1MDg1NzM2WhcNMjIwMjE0\nMDkwNzAwWjBnMRAwDgYDVQQDDAdZb3VzaWduMSAwHgYDVQQFExcyMDE5LTAyLTE1\nIDEwOjA3OjM1OjkzODESMBAGA1UECwwJNzk0NTEzOTg2MRAwDgYDVQQKDAdZb3Vz\naWduMQswCQYDVQQGEwJGUjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAIWI+w9xQ9uSt4Lb/l14Yu8yRvCWer06bzm5RFvqgZRiD2Cq2Vx8LNzi0pGCxBdI\nQ9nlWcxCAh67Lp/OygCKpUN2DnNiIiORK5b283VKASlGMy5frVOCKiq2YCz0vA6k\npIqzBP7DKV/CsZ3EqP0uw9C12EH3PrBJGQq4WOZI1Q5Fs2JAhOwfq/wq2orG424y\n0A9+smh8J3DjwSCoMQZrdHd/obK3w8AaTGI535dqWIZ0wKTZBZ7xahGAPGXo9cy9\nUXFtazxWGIcu5uYjRLtlUyialcUgB0db1eyOzFoRJCsaE6s7QgBhQUUfDkXs1UIp\nD0BfB/K2kPxGENm2Uk6WAfcCAwEAAaOCAYYwggGCMAwGA1UdEwEB/wQCMAAwHwYD\nVR0jBBgwFoAUzmRTx3jf2iI16mJGhB48l67NzPUwSwYDVR0gBEQwQjBABgoqgXoB\ngi4BBwEAMDIwMAYIKwYBBQUHAgEWJGh0dHA6Ly95b3VzaWduLmZyL2ZyL3B1Ymxp\nYy9kb2N1bWVudDAgBgNVHSUEGTAXBgorBgEEAYI3CgMMBgkqhkiG9y8BAQUwgbIG\nA1UdHwSBqjCBpzA1oDOgMYYvaHR0cDovL3RtcC55b3VzaWduLmZyL2NybC95b3Vz\naWduc2Fzc2lnbjJjYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAyLnlvdXNpZ24uZnIv\nY3JsL3lvdXNpZ25zYXNzaWduMmNhLmNybDA2oDSgMoYwaHR0cDovL3RtcDMueW91\nc2lnbi5mci9jcmwveW91c2lnbnNhc3NpZ24yY2EuY3JsMB0GA1UdDgQWBBTgXAE8\nONE89UOu8TjrtBH9cbd92jAOBgNVHQ8BAf8EBAMCBkAwDQYJKoZIhvcNAQELBQAD\nggIBAAF+VPpcphjyoU8RvQO14ojWV51wJxsx5ShsvtXPsQ7dBws8XmthuTyyYxtM\nE3dldkJsaQt8vK7/AUURwO7YX7PHVlwIqm2kpNThZ4+sEib3SOivP8vpfIP3mD0+\nIFREI/8adIWYyiYzp1xjuuAoZ6lyg2JsOQ/67nyS+y7sUQ++GfQulb5yjkMytmYs\nPJ0uyjnNAI/+hy4okIY7qgHFZaDGBSqdGU28NZcCEeBLwjcH4ET2Q1LvJ7nkKQMM\ncxw+TXdy7cgIAjdfCymjJ701s43JKI01NFrNZ0I20jTOuh2qB4Kf8fQFwmutTnRM\nP4ZglXsXZkyL9snUWwMSAP9QP13fPD6EDTTshyijvwHb6zbrFg3U7J0m/Sjmqp2A\nzD+pj777dQ2jg0zTJ3WLOosE1/tt60ygK3HhiVnnyM8sdjTrZ6ca9++TgnRthKss\nR35c/1Be3RJtYnar2yn3bA2pklLcjnV8Q3ZSks4ll7XnEI9V8EQSNHkmno7k+asl\nWeQ8eC82fkwCwzXMLBTt1kN+0qXfpvVoSITPSVlOvdCsFCRSC3JMYHUY6c9oUUlV\nCCEBWxe/Vm8R+AG4i3zk9wIoLDLW2eeOx1G61QFtIlgJPbKRLiDZhaGZq1PN8T2o\nD/1S7m9PMISw1hrWHpJM+gZpRLsfRp5EH3ieRFzt24fpIosf\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGnDCCBISgAwIBAgIIfVpT4jgxW6cwDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBST09UMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTYwMTI3MTYyODExWhcNMjYwMTI3\nMTYyODExWjB/MSQwIgYDVQQDDBtZT1VTSUdOIFNBUyAtIFNJR04yIFRFU1QgQ0Ex\nEjAQBgNVBAsMCTc5NDUxMzk4NjEUMBIGA1UECgwLWU9VU0lHTiBTQVMxDTALBgNV\nBAcMBENBRU4xETAPBgNVBAgMCENBTFZBRE9TMQswCQYDVQQGEwJGUjCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBALUsirI2GYG9qu3U2S4V4JI0V9ohNP3W\nEpssSBcepPBV4UPtwAbFGvJqtGO/0nNZO0J7UwUb0sZBnedFl96tRQff3PECyO9k\n1B1/8rK1TbLPQPhTYWlrvX69wHXJFPxf/JkL4l4Lp6nFS80SYlaRj2RHHJ8HDj8S\nP1oULnhW2f2i8AlJwFe34eLJbWgeI5D7UAo59GMQ6bO4aVMaaDWvXsKOn8qmCUwF\ngtQNOqtYyLgURr4qivbjsZEv5H4Ee+wR5J+U6wd9dpIoTV2g1mExNlKVoj9qX9rh\n4al4G80fKNUT8bVnzxmdkDZzuzKm+rNIN6Fnc5CTHu2IcMHcuvKMRvsSJ+0fiz1E\nb/xsKO18Aiy5XOEQFqDrXRKC5AMmF/zB9Fh1Xe7Bi6IQo15NOjOCHLiBTARsMBJ8\nRWTuTv89qnL1lECogFusbptDG4Gu7Y7M13V8gOoGAxBs6uALjoseFZcnLQlIjZCV\nL0xyhrXFCLFnv4gy2+xY1bJNueD3cLFkzaxiCJ4WKesmRIfc6vHaQNl5NpU+9tFb\nU6o01c3fjZUdIh/MR3GFIXNpPsilhl///5aT5h2L98Gmb2q7tqSbFqm5z17MG3uS\ne4zCt+UD7MI8oCF2CELo79xMjtmqEwIf0IU8MxaLaLSZ0J164ZyHwvfIewgBp8XF\nqLn0jrZNiocXAgMBAAGjggEaMIIBFjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY\nMBaAFGXEFaTuRlW+zr11R8A0QEYcGvuRMIGyBgNVHR8EgaowgacwNaAzoDGGL2h0\ndHA6Ly90bXAueW91c2lnbi5mci9jcmwveW91c2lnbnNhc3Jvb3QyY2EuY3JsMDag\nNKAyhjBodHRwOi8vdG1wMi55b3VzaWduLmZyL2NybC95b3VzaWduc2Fzcm9vdDJj\nYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAzLnlvdXNpZ24uZnIvY3JsL3lvdXNpZ25z\nYXNyb290MmNhLmNybDAdBgNVHQ4EFgQUzmRTx3jf2iI16mJGhB48l67NzPUwDgYD\nVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQBZ8ru8LEQ1qzQqG/Rx420f\ncN4YNM1cXV+DwpWOw46Oh9U7BG1i/wYPy6uEZvj/n+nm/MkbajrzTViZnKMRs7Wy\nCWBqvAfl4gcbWvrRzdVwsbd3UbsxD5UD1CkJYl5/4gPvCae6YVCF9WtnH2lSy/Gv\n5bbIfyXF++iNQn+lLe59EhA3WinTql/yk/SPUNVn4/IZ0UWrw1IPS3kmnIal1mk7\npL45n5G51qAHpSbAoTsCeRBJZ6jr38n+FimZahnBZTu4+XycDVicrydpsopQiTt8\nry+mP1b9Nd4eoHR4/F/82w1rNfAM0NJKL8w3qr8lMdxsbANMvW0ixgjRnBpuRRB4\n5iUA5Mb2DbiYJARBoruYqYGya317Gcvtk4w0O48CXR+HPXygHh/63De1JdOUjSc2\nHagr6jp7NKbn/XmWBjWuoG9J9d9sC5U/mgjw5Xjf9jKGuUGz46EtlzzpojVB7fJA\nE2Ye0kOuLANpoTFAI4EJe5nTJz0HsFG3nDshsD9Mb1/kUBSGUDWijL5f0LDqf562\nkTioMpkK7ivZxQksF8+bMId5sUNrDVA/6lhn8tD5gzGacSU7IMfIH3EUKcI1NoWm\nhV+aI8EbXP6251cF74y/tejTUQLdOQ9ut3PsxYmTTDqr8RPI6UZeh2yibzSmgGwU\nfylsTiF/gVGm5cpWCrULCw==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGnDCCBISgAwIBAgIIT0TY3eM9ut0wDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBST09UMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTYwMTI3MTYyNjE2WhcNMzYwMTI3\nMTYyNjE2WjB/MSQwIgYDVQQDDBtZT1VTSUdOIFNBUyAtIFJPT1QyIFRFU1QgQ0Ex\nEjAQBgNVBAsMCTc5NDUxMzk4NjEUMBIGA1UECgwLWU9VU0lHTiBTQVMxDTALBgNV\nBAcMBENBRU4xETAPBgNVBAgMCENBTFZBRE9TMQswCQYDVQQGEwJGUjCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBALXMHUFwSacaI5TjtMRw4kJ9o1ve/IZo\noj+2HOpW3iqs74cmsYjpHbJD0UAdh3SpdlLFK1/WBf0uEbzn6z7gRfUkEAo5EnHs\nM1iTfCXWDtA+xd9X4h2UAVEdXRzglvOvT275fjI1uj9Zi4Rz95drhlGkZVCDIMuv\n7fazkT868grWSfGSUc2C8d9+kOL4pCKuSanOc/nwD61F+oQ6KeEMtmpbr57Yy+qY\ntaF6ieKiDGn0aDj3yImnA9YqfFlX4mCyn+LmiqrXyEn0Z5iYLbO0wXkyPqhcO9c9\ngS1Y8Y/1AEvxnaLlV3eG402ZYUS6tT27o+tpdCAIx+3zMhNsPI9wXUjlVr/8ts+/\nuOUUCUWoBK3J6R1zG3urCdnuor8xAaWK/OHtvg8rXoXEfi8ujWV3EbiwIwiUHVh4\nrJIE1vhsVPW/sTM9yEjRFks0swyoX6QupEuaZLV4DbmcEbmZ2XIH5Cw2c1qwUTk2\n8vQzKHszLdRb9scnjd3yHsef5ZAHS9hUoFIfG+MzINGm3U6v4exspSw/EshSavVj\nR+gL0l+sdK4L6xe++K++Gpp5xn5cZUJeg4YtdgGju7lMdGpJVVwl0Y8UAEJt9xgC\nMvGctrkoaUuBjOhrGQQITDMsNrtgi28s7rUB6k+yxcaGBBp2PyAIsIe0e1wKGm1N\nHjGtqY0IV1tFAgMBAAGjggEaMIIBFjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY\nMBaAFGXEFaTuRlW+zr11R8A0QEYcGvuRMIGyBgNVHR8EgaowgacwNaAzoDGGL2h0\ndHA6Ly90bXAueW91c2lnbi5mci9jcmwveW91c2lnbnNhc3Jvb3QyY2EuY3JsMDag\nNKAyhjBodHRwOi8vdG1wMi55b3VzaWduLmZyL2NybC95b3VzaWduc2Fzcm9vdDJj\nYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAzLnlvdXNpZ24uZnIvY3JsL3lvdXNpZ25z\nYXNyb290MmNhLmNybDAdBgNVHQ4EFgQUZcQVpO5GVb7OvXVHwDRARhwa+5EwDgYD\nVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQCuxOXQDSYF0RpYQWonRDlU\nZ64IaGJ5buU4tGzf7rAgIQdXbO/VjjfF9UsjnLopNwWkuSJvINm21obYHcoSwvpz\nlwS/3uJCLxaw5q4SVJ4x5rajh/2qtFzcThSh48rcXcqoxAmc6BzQuIOm9cFUD2Ri\nqUJmg5O+CoLuE1b4i+CsCFL3AoWnBHFZ4YtInQBFIRBhMNPICvYOCF6jjgmMxkWU\nM8SEp7FSFfsy/oPI1dt+k9JjHCXhtWO9ndLvvwvLcjqRO3ItiF9IazsNcNLhaIMA\nlvYiQ+jLpckAuTxj7XHQyJSEofTMPr+ZSgQwUc337MJyxPhTDkch5cQBfnC20Usk\nyjdwwaeiwnNMhESwgDa4Oqw5IOmq+VmqtR+9F9yxACrpyph593F1zYwv7ikik5dI\nIYACb2fKLQrcnCfhm0k1Nt9UXoc9mQzFUK0DWJNLeGJo0rfRQh5ZqhcBG2U0KZFQ\nRtQQEf3zXJxQJGlCn1UMZMJswAzfhMTdGPNzyDI2u+9Q8WT7M2f59Idiae2m79uG\nuStRwN7Vnrpa399YXixOpNTz6d0NFBOAq1Nfwy5cnQDCnT9JkrKidrFKyA21b67m\nSfJIpMSPfFbt3g0h7JPWK7OC4Ydydh92e7/IUhtkudKMoazlwSJ7484dE7NyTpol\n62H0sW/1gmFzE6/QmCUR+w==\n-----END CERTIFICATE-----",
                                "generated_at": "2019-02-15 09:07:36.000000"
                              }
                            }
                          ],
                          "initial_hash": "8decc8571946d4cd70a024949e033a2a2a54377fe9f1c1b944c20f9ee11a9e51",
                          "initial_storage_id": "fdad7bcf-73d5-4a73-945d-ba7b738c530b"
                        }
                      ],
                      "organization": {
                        "id": "d89a0f7b-bd3f-494d-ab61-71b69f24a3d9",
                        "name": "Universalt Music"
                      },
                      "authentication": {
                        "mode": "sms",
                        "message": "eSIGNATURE: 791994 is your security code to confirm the signature of your documents.",
                        "validated_at": "2021-07-05 12:21:40.468338"
                      },
                      "signature_request": {
                        "id": "4d164217-60e7-4733-b56c-65ad637eadce",
                        "name": "My new request",
                        "sent_at": "2021-07-05 12:21:21.805745",
                        "expired_at": "2022-01-05 22:59:00.000000"
                      },
                      "electronic_signature_level": {
                        "level": "Simple electronic signature"
                      }
                    }
                  },
                  "properties": {
                    "version": {
                      "type": "number"
                    },
                    "signature_request": {
                      "type": "object"
                    },
                    "sender": {
                      "type": "object"
                    },
                    "signer": {
                      "type": "object"
                    },
                    "documents": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {}
                    },
                    "organization": {
                      "type": "object"
                    },
                    "authentication": {
                      "type": "object"
                    },
                    "electronic_signature_level": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "version",
                    "signature_request",
                    "sender",
                    "signer",
                    "documents",
                    "organization",
                    "authentication"
                  ]
                },
                "examples": {
                  "audit-trail-example": {
                    "value": {
                      "sender": {
                        "id": "3409ab3f-9295-4a69-9923-e9d32d9533d6",
                        "type": "User",
                        "email": "johnny.wallyday@example.com",
                        "last_name": "Wallyday",
                        "first_name": "Johnny",
                        "ip_address": "172.18.0.1",
                        "phone_number": "+447123456789"
                      },
                      "signer": {
                        "id": "44e4b0f8-55c9-48a9-803f-d89957525270",
                        "last_name": "Wallyday",
                        "first_name": "Johnny",
                        "ip_address": "172.18.0.1",
                        "phone_number": "+447123456789",
                        "email_address": "johnny.wallyday@example.com",
                        "consent_given_at": "2021-07-05 12:21:42.352630",
                        "signature_process_completed_at": "2021-07-05 12:21:43.656000"
                      },
                      "version": 5,
                      "documents": [
                        {
                          "id": "a9534a42-bbc1-4355-b270-58f315eda779",
                          "name": "sample.pdf",
                          "mime_type": "application/pdf",
                          "signatures": [
                            {
                              "hash": "4396f6a9f0554928f7bcc8e645a6441cb432c1606137ac8f3a735aef83946974",
                              "reason": "Signed by Johnny Wallyday",
                              "certificate": {
                                "dn": "CN=Yousign, C=FR, O=Yousign, OU=794513986, serialNumber=2019-02-15 10:07:35:938",
                                "oid": "1.2.250.1.302.1.7.1.0",
                                "hash": "69570e2d5cc2b352b2249ba32b16195722099a89aa35de71ee1e745f771d66c5",
                                "content": "-----BEGIN CERTIFICATE-----\nMIIF8DCCA9igAwIBAgIIdfWiF8OAJo0wDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBTSUdOMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTkwMjE1MDg1NzM2WhcNMjIwMjE0\nMDkwNzAwWjBnMRAwDgYDVQQDDAdZb3VzaWduMSAwHgYDVQQFExcyMDE5LTAyLTE1\nIDEwOjA3OjM1OjkzODESMBAGA1UECwwJNzk0NTEzOTg2MRAwDgYDVQQKDAdZb3Vz\naWduMQswCQYDVQQGEwJGUjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAIWI+w9xQ9uSt4Lb/l14Yu8yRvCWer06bzm5RFvqgZRiD2Cq2Vx8LNzi0pGCxBdI\nQ9nlWcxCAh67Lp/OygCKpUN2DnNiIiORK5b283VKASlGMy5frVOCKiq2YCz0vA6k\npIqzBP7DKV/CsZ3EqP0uw9C12EH3PrBJGQq4WOZI1Q5Fs2JAhOwfq/wq2orG424y\n0A9+smh8J3DjwSCoMQZrdHd/obK3w8AaTGI535dqWIZ0wKTZBZ7xahGAPGXo9cy9\nUXFtazxWGIcu5uYjRLtlUyialcUgB0db1eyOzFoRJCsaE6s7QgBhQUUfDkXs1UIp\nD0BfB/K2kPxGENm2Uk6WAfcCAwEAAaOCAYYwggGCMAwGA1UdEwEB/wQCMAAwHwYD\nVR0jBBgwFoAUzmRTx3jf2iI16mJGhB48l67NzPUwSwYDVR0gBEQwQjBABgoqgXoB\ngi4BBwEAMDIwMAYIKwYBBQUHAgEWJGh0dHA6Ly95b3VzaWduLmZyL2ZyL3B1Ymxp\nYy9kb2N1bWVudDAgBgNVHSUEGTAXBgorBgEEAYI3CgMMBgkqhkiG9y8BAQUwgbIG\nA1UdHwSBqjCBpzA1oDOgMYYvaHR0cDovL3RtcC55b3VzaWduLmZyL2NybC95b3Vz\naWduc2Fzc2lnbjJjYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAyLnlvdXNpZ24uZnIv\nY3JsL3lvdXNpZ25zYXNzaWduMmNhLmNybDA2oDSgMoYwaHR0cDovL3RtcDMueW91\nc2lnbi5mci9jcmwveW91c2lnbnNhc3NpZ24yY2EuY3JsMB0GA1UdDgQWBBTgXAE8\nONE89UOu8TjrtBH9cbd92jAOBgNVHQ8BAf8EBAMCBkAwDQYJKoZIhvcNAQELBQAD\nggIBAAF+VPpcphjyoU8RvQO14ojWV51wJxsx5ShsvtXPsQ7dBws8XmthuTyyYxtM\nE3dldkJsaQt8vK7/AUURwO7YX7PHVlwIqm2kpNThZ4+sEib3SOivP8vpfIP3mD0+\nIFREI/8adIWYyiYzp1xjuuAoZ6lyg2JsOQ/67nyS+y7sUQ++GfQulb5yjkMytmYs\nPJ0uyjnNAI/+hy4okIY7qgHFZaDGBSqdGU28NZcCEeBLwjcH4ET2Q1LvJ7nkKQMM\ncxw+TXdy7cgIAjdfCymjJ701s43JKI01NFrNZ0I20jTOuh2qB4Kf8fQFwmutTnRM\nP4ZglXsXZkyL9snUWwMSAP9QP13fPD6EDTTshyijvwHb6zbrFg3U7J0m/Sjmqp2A\nzD+pj777dQ2jg0zTJ3WLOosE1/tt60ygK3HhiVnnyM8sdjTrZ6ca9++TgnRthKss\nR35c/1Be3RJtYnar2yn3bA2pklLcjnV8Q3ZSks4ll7XnEI9V8EQSNHkmno7k+asl\nWeQ8eC82fkwCwzXMLBTt1kN+0qXfpvVoSITPSVlOvdCsFCRSC3JMYHUY6c9oUUlV\nCCEBWxe/Vm8R+AG4i3zk9wIoLDLW2eeOx1G61QFtIlgJPbKRLiDZhaGZq1PN8T2o\nD/1S7m9PMISw1hrWHpJM+gZpRLsfRp5EH3ieRFzt24fpIosf\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGnDCCBISgAwIBAgIIfVpT4jgxW6cwDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBST09UMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTYwMTI3MTYyODExWhcNMjYwMTI3\nMTYyODExWjB/MSQwIgYDVQQDDBtZT1VTSUdOIFNBUyAtIFNJR04yIFRFU1QgQ0Ex\nEjAQBgNVBAsMCTc5NDUxMzk4NjEUMBIGA1UECgwLWU9VU0lHTiBTQVMxDTALBgNV\nBAcMBENBRU4xETAPBgNVBAgMCENBTFZBRE9TMQswCQYDVQQGEwJGUjCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBALUsirI2GYG9qu3U2S4V4JI0V9ohNP3W\nEpssSBcepPBV4UPtwAbFGvJqtGO/0nNZO0J7UwUb0sZBnedFl96tRQff3PECyO9k\n1B1/8rK1TbLPQPhTYWlrvX69wHXJFPxf/JkL4l4Lp6nFS80SYlaRj2RHHJ8HDj8S\nP1oULnhW2f2i8AlJwFe34eLJbWgeI5D7UAo59GMQ6bO4aVMaaDWvXsKOn8qmCUwF\ngtQNOqtYyLgURr4qivbjsZEv5H4Ee+wR5J+U6wd9dpIoTV2g1mExNlKVoj9qX9rh\n4al4G80fKNUT8bVnzxmdkDZzuzKm+rNIN6Fnc5CTHu2IcMHcuvKMRvsSJ+0fiz1E\nb/xsKO18Aiy5XOEQFqDrXRKC5AMmF/zB9Fh1Xe7Bi6IQo15NOjOCHLiBTARsMBJ8\nRWTuTv89qnL1lECogFusbptDG4Gu7Y7M13V8gOoGAxBs6uALjoseFZcnLQlIjZCV\nL0xyhrXFCLFnv4gy2+xY1bJNueD3cLFkzaxiCJ4WKesmRIfc6vHaQNl5NpU+9tFb\nU6o01c3fjZUdIh/MR3GFIXNpPsilhl///5aT5h2L98Gmb2q7tqSbFqm5z17MG3uS\ne4zCt+UD7MI8oCF2CELo79xMjtmqEwIf0IU8MxaLaLSZ0J164ZyHwvfIewgBp8XF\nqLn0jrZNiocXAgMBAAGjggEaMIIBFjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY\nMBaAFGXEFaTuRlW+zr11R8A0QEYcGvuRMIGyBgNVHR8EgaowgacwNaAzoDGGL2h0\ndHA6Ly90bXAueW91c2lnbi5mci9jcmwveW91c2lnbnNhc3Jvb3QyY2EuY3JsMDag\nNKAyhjBodHRwOi8vdG1wMi55b3VzaWduLmZyL2NybC95b3VzaWduc2Fzcm9vdDJj\nYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAzLnlvdXNpZ24uZnIvY3JsL3lvdXNpZ25z\nYXNyb290MmNhLmNybDAdBgNVHQ4EFgQUzmRTx3jf2iI16mJGhB48l67NzPUwDgYD\nVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQBZ8ru8LEQ1qzQqG/Rx420f\ncN4YNM1cXV+DwpWOw46Oh9U7BG1i/wYPy6uEZvj/n+nm/MkbajrzTViZnKMRs7Wy\nCWBqvAfl4gcbWvrRzdVwsbd3UbsxD5UD1CkJYl5/4gPvCae6YVCF9WtnH2lSy/Gv\n5bbIfyXF++iNQn+lLe59EhA3WinTql/yk/SPUNVn4/IZ0UWrw1IPS3kmnIal1mk7\npL45n5G51qAHpSbAoTsCeRBJZ6jr38n+FimZahnBZTu4+XycDVicrydpsopQiTt8\nry+mP1b9Nd4eoHR4/F/82w1rNfAM0NJKL8w3qr8lMdxsbANMvW0ixgjRnBpuRRB4\n5iUA5Mb2DbiYJARBoruYqYGya317Gcvtk4w0O48CXR+HPXygHh/63De1JdOUjSc2\nHagr6jp7NKbn/XmWBjWuoG9J9d9sC5U/mgjw5Xjf9jKGuUGz46EtlzzpojVB7fJA\nE2Ye0kOuLANpoTFAI4EJe5nTJz0HsFG3nDshsD9Mb1/kUBSGUDWijL5f0LDqf562\nkTioMpkK7ivZxQksF8+bMId5sUNrDVA/6lhn8tD5gzGacSU7IMfIH3EUKcI1NoWm\nhV+aI8EbXP6251cF74y/tejTUQLdOQ9ut3PsxYmTTDqr8RPI6UZeh2yibzSmgGwU\nfylsTiF/gVGm5cpWCrULCw==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGnDCCBISgAwIBAgIIT0TY3eM9ut0wDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBST09UMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTYwMTI3MTYyNjE2WhcNMzYwMTI3\nMTYyNjE2WjB/MSQwIgYDVQQDDBtZT1VTSUdOIFNBUyAtIFJPT1QyIFRFU1QgQ0Ex\nEjAQBgNVBAsMCTc5NDUxMzk4NjEUMBIGA1UECgwLWU9VU0lHTiBTQVMxDTALBgNV\nBAcMBENBRU4xETAPBgNVBAgMCENBTFZBRE9TMQswCQYDVQQGEwJGUjCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBALXMHUFwSacaI5TjtMRw4kJ9o1ve/IZo\noj+2HOpW3iqs74cmsYjpHbJD0UAdh3SpdlLFK1/WBf0uEbzn6z7gRfUkEAo5EnHs\nM1iTfCXWDtA+xd9X4h2UAVEdXRzglvOvT275fjI1uj9Zi4Rz95drhlGkZVCDIMuv\n7fazkT868grWSfGSUc2C8d9+kOL4pCKuSanOc/nwD61F+oQ6KeEMtmpbr57Yy+qY\ntaF6ieKiDGn0aDj3yImnA9YqfFlX4mCyn+LmiqrXyEn0Z5iYLbO0wXkyPqhcO9c9\ngS1Y8Y/1AEvxnaLlV3eG402ZYUS6tT27o+tpdCAIx+3zMhNsPI9wXUjlVr/8ts+/\nuOUUCUWoBK3J6R1zG3urCdnuor8xAaWK/OHtvg8rXoXEfi8ujWV3EbiwIwiUHVh4\nrJIE1vhsVPW/sTM9yEjRFks0swyoX6QupEuaZLV4DbmcEbmZ2XIH5Cw2c1qwUTk2\n8vQzKHszLdRb9scnjd3yHsef5ZAHS9hUoFIfG+MzINGm3U6v4exspSw/EshSavVj\nR+gL0l+sdK4L6xe++K++Gpp5xn5cZUJeg4YtdgGju7lMdGpJVVwl0Y8UAEJt9xgC\nMvGctrkoaUuBjOhrGQQITDMsNrtgi28s7rUB6k+yxcaGBBp2PyAIsIe0e1wKGm1N\nHjGtqY0IV1tFAgMBAAGjggEaMIIBFjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY\nMBaAFGXEFaTuRlW+zr11R8A0QEYcGvuRMIGyBgNVHR8EgaowgacwNaAzoDGGL2h0\ndHA6Ly90bXAueW91c2lnbi5mci9jcmwveW91c2lnbnNhc3Jvb3QyY2EuY3JsMDag\nNKAyhjBodHRwOi8vdG1wMi55b3VzaWduLmZyL2NybC95b3VzaWduc2Fzcm9vdDJj\nYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAzLnlvdXNpZ24uZnIvY3JsL3lvdXNpZ25z\nYXNyb290MmNhLmNybDAdBgNVHQ4EFgQUZcQVpO5GVb7OvXVHwDRARhwa+5EwDgYD\nVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQCuxOXQDSYF0RpYQWonRDlU\nZ64IaGJ5buU4tGzf7rAgIQdXbO/VjjfF9UsjnLopNwWkuSJvINm21obYHcoSwvpz\nlwS/3uJCLxaw5q4SVJ4x5rajh/2qtFzcThSh48rcXcqoxAmc6BzQuIOm9cFUD2Ri\nqUJmg5O+CoLuE1b4i+CsCFL3AoWnBHFZ4YtInQBFIRBhMNPICvYOCF6jjgmMxkWU\nM8SEp7FSFfsy/oPI1dt+k9JjHCXhtWO9ndLvvwvLcjqRO3ItiF9IazsNcNLhaIMA\nlvYiQ+jLpckAuTxj7XHQyJSEofTMPr+ZSgQwUc337MJyxPhTDkch5cQBfnC20Usk\nyjdwwaeiwnNMhESwgDa4Oqw5IOmq+VmqtR+9F9yxACrpyph593F1zYwv7ikik5dI\nIYACb2fKLQrcnCfhm0k1Nt9UXoc9mQzFUK0DWJNLeGJo0rfRQh5ZqhcBG2U0KZFQ\nRtQQEf3zXJxQJGlCn1UMZMJswAzfhMTdGPNzyDI2u+9Q8WT7M2f59Idiae2m79uG\nuStRwN7Vnrpa399YXixOpNTz6d0NFBOAq1Nfwy5cnQDCnT9JkrKidrFKyA21b67m\nSfJIpMSPfFbt3g0h7JPWK7OC4Ydydh92e7/IUhtkudKMoazlwSJ7484dE7NyTpol\n62H0sW/1gmFzE6/QmCUR+w==\n-----END CERTIFICATE-----",
                                "generated_at": "2019-02-15 09:07:36.000000"
                              }
                            }
                          ],
                          "initial_hash": "8decc8571946d4cd70a024949e033a2a2a54377fe9f1c1b944c20f9ee11a9e51",
                          "initial_storage_id": "fdad7bcf-73d5-4a73-945d-ba7b738c530b"
                        }
                      ],
                      "organization": {
                        "id": "d89a0f7b-bd3f-494d-ab61-71b69f24a3d9",
                        "name": "Universalt Music"
                      },
                      "authentication": {
                        "mode": "sms",
                        "message": "eSIGNATURE: 791994 is your security code to confirm the signature of your documents.",
                        "validated_at": "2021-07-05 12:21:40.468338"
                      },
                      "signature_request": {
                        "id": "4d164217-60e7-4733-b56c-65ad637eadce",
                        "name": "My new request",
                        "sent_at": "2021-07-05 12:21:21.805745",
                        "expired_at": "2022-01-05 22:59:00.000000"
                      },
                      "electronic_signature_level": {
                        "level": "Simple electronic signature"
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "get-signature_requests-signatureRequestId-signers-signerId-audit_trails",
        "description": "Get signer audit trail"
      }
    },
    "/consumptions": {
      "get": {
        "summary": "Get consumptions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "app": {
                      "type": "object",
                      "required": [
                        "electronic_signature",
                        "advanced_electronic_signature",
                        "advanced_electronic_signature_with_qualified_certificate"
                      ],
                      "properties": {
                        "electronic_signature": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "advanced_electronic_signature": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "advanced_electronic_signature_with_qualified_certificate": {
                          "type": "integer",
                          "minimum": 0
                        }
                      }
                    },
                    "api": {
                      "type": "object",
                      "required": [
                        "electronic_signature",
                        "advanced_electronic_signature",
                        "advanced_electronic_signature_with_qualified_certificate"
                      ],
                      "properties": {
                        "electronic_signature": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "advanced_electronic_signature": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "advanced_electronic_signature_with_qualified_certificate": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "electronic_seal": {
                          "type": "integer",
                          "minimum": 0
                        }
                      }
                    },
                    "connector": {
                      "type": "object",
                      "required": [
                        "electronic_signature",
                        "advanced_electronic_signature",
                        "advanced_electronic_signature_with_qualified_certificate"
                      ],
                      "properties": {
                        "electronic_signature": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "advanced_electronic_signature": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "advanced_electronic_signature_with_qualified_certificate": {
                          "type": "integer",
                          "minimum": 0
                        }
                      }
                    }
                  },
                  "required": [
                    "app",
                    "api",
                    "connector"
                  ]
                },
                "examples": {}
              },
              "application/xml": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "get-consumptions",
        "description": "Get signatures consumption by source.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
            },
            "in": "query",
            "name": "from",
            "description": "\"from\" date must be inferior or equal to \"to\"",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
            },
            "in": "query",
            "name": "to",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "authentication_key"
          }
        ],
        "tags": [
          "Consumption"
        ]
      }
    },
    "/consumptions/export": {
      "get": {
        "summary": "Export consumption data",
        "responses": {
          "200": {
            "description": "Returns a .csv file containing the raw consumption data.",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "get-consumptions-export",
        "description": "Get a binary .csv file containing all the underlying data of signatures consumption.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
            },
            "in": "query",
            "name": "from",
            "description": "\"from\" date must be inferior or equal to \"to\"",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
            },
            "in": "query",
            "name": "to",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "authentication_key"
          }
        ],
        "tags": [
          "Consumption"
        ]
      }
    },
    "/contacts/{contactId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "description": "Contact Id",
            "example": "a5ed324c-4ab5-4654-9627-cbd2657e92e0"
          },
          "name": "contactId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a contact",
        "tags": [
          "Contact"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "get-contact-contactId",
        "description": "Get a contact"
      },
      "delete": {
        "summary": "Delete a contact",
        "tags": [
          "Contact"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "delete-contacts-contactId",
        "description": "Delete a contact"
      }
    },
    "/documents": {
      "post": {
        "x-readme": {
          "samples-enabled": false,
          "explorer-enabled": false
        },
        "summary": "Upload a document",
        "deprecated": true,
        "tags": [
          "Document"
        ],
        "operationId": "post-documents",
        "description": "Upload a document",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadDocumentInput"
              }
            }
          },
          "description": "Upload a document"
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        }
      }
    },
    "/custom_experiences": {
      "post": {
        "summary": "Create a Custom Experience",
        "operationId": "post-custom-experience",
        "description": "Create a Custom Experience",
        "tags": [
          "Custom Experience"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomExperienceInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Custom Experience",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string"
                    },
                    "landing_page_disabled": {
                      "type": "boolean"
                    },
                    "side_panel_disabled": {
                      "type": "boolean"
                    },
                    "background_color": {
                      "type": "string",
                      "nullable": true
                    },
                    "button_color": {
                      "type": "string",
                      "nullable": true
                    },
                    "text_color": {
                      "type": "string",
                      "nullable": true
                    },
                    "text_button_color": {
                      "type": "string",
                      "nullable": true
                    },
                    "disabled_notifications": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomExperience_DisabledNotificationsType"
                      }
                    },
                    "email_logo_disabled": {
                      "type": "boolean"
                    },
                    "email_header_text_disabled": {
                      "type": "boolean"
                    },
                    "email_footer_signature_disabled": {
                      "type": "boolean"
                    },
                    "email_expiration_text_disabled": {
                      "type": "boolean"
                    },
                    "redirect_urls": {
                      "type": "object",
                      "required": [
                        "success",
                        "error"
                      ],
                      "properties": {
                        "success": {
                          "type": "string",
                          "nullable": true
                        },
                        "error": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "logo": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "https://yousign.com/custom_experience/89120884-d29a-4b1a-ac7b-a9e73a872795/logo"
                    },
                    "source": {
                      "$ref": "#/components/schemas/CustomExperience_Source"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "landing_page_disabled",
                    "side_panel_disabled",
                    "background_color",
                    "button_color",
                    "text_color",
                    "text_button_color",
                    "disabled_notifications",
                    "email_logo_disabled",
                    "email_header_text_disabled",
                    "email_footer_signature_disabled",
                    "email_expiration_text_disabled",
                    "redirect_urls",
                    "logo",
                    "source",
                    "created_at"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/BadRequestError"
          }
        }
      },
      "get": {
        "summary": "List Custom Experiences",
        "operationId": "get-custom_experiences",
        "description": "List Custom Experiences",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1custom_experiences/post/responses/201/content/application~1json/schema"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AfterCursor"
          }
        ],
        "tags": [
          "Custom Experience"
        ]
      }
    },
    "/custom_experiences/{customExperienceId}/logo": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "description": "Custom Experience Id",
            "example": "a5ed324c-4ab5-4654-9627-cbd2657e92e0"
          },
          "name": "customExperienceId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Update a Custom Experience Logo",
        "tags": [
          "Custom Experience"
        ],
        "operationId": "patch-custom-experience-logo",
        "description": "Create a Custom Experience Logo",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "title": "UploadFileInput",
                "type": "object",
                "description": "Upload a file",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "example": "Binary file"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          },
          "description": "Update a Custom Experience Logo"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1custom_experiences/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        }
      },
      "delete": {
        "summary": "Delete a Custom Experience Logo",
        "operationId": "delete-custom_experience-logo",
        "description": "Delete a Custom Experience Logo",
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "tags": [
          "Custom Experience"
        ]
      }
    },
    "/custom_experiences/{customExperienceId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "description": "Custom Experience Id",
            "example": "a5ed324c-4ab5-4654-9627-cbd2657e92e0"
          },
          "name": "customExperienceId",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Delete a Custom Experience",
        "operationId": "delete-custom_experience",
        "description": "Delete a Custom Experience",
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "tags": [
          "Custom Experience"
        ]
      },
      "patch": {
        "summary": "Update a Custom Experience",
        "operationId": "patch-custom_experiences-customExperienceId",
        "description": "Update a Custom Experience",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1custom_experiences/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomExperienceInput"
              }
            }
          }
        },
        "parameters": [],
        "tags": [
          "Custom Experience"
        ]
      },
      "get": {
        "summary": "Get a given Custom Experience",
        "operationId": "get-custom_experiences-customExperienceId",
        "description": "Get a given Custom Experience",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1custom_experiences/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "tags": [
          "Custom Experience"
        ]
      }
    },
    "/electronic_seals": {
      "post": {
        "summary": "Create Electronic Seal",
        "operationId": "post-electronic-seals",
        "description": "Create an electronic seal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CreateElectronicSealPayload",
                "type": "object",
                "description": "Create an electronic seal",
                "properties": {
                  "document_id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "160473f9-156f-4583-848c-cbc3dec49b4a",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                  },
                  "image_id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "333fa90a-a629-4708-8fe9-160dcb055a9b",
                    "nullable": true,
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                  },
                  "external_id": {
                    "type": "string",
                    "pattern": "^[\\w\\-@.%+]+$",
                    "example": "externalId-123",
                    "maxLength": 255,
                    "description": "Store a custom id that will be added to webhooks",
                    "nullable": true
                  },
                  "timestamp": {
                    "type": "boolean",
                    "default": false
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "title": "CreateElectronicSealFieldSealPayload",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "seal",
                              "enum": [
                                "seal",
                                "read_only_text"
                              ]
                            },
                            "height": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 32767,
                              "example": 200
                            },
                            "width": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 32767,
                              "example": 250
                            },
                            "page": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 32767,
                              "example": 1
                            },
                            "x": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 32767,
                              "example": 0
                            },
                            "y": {
                              "type": "integer",
                              "example": 0,
                              "minimum": 0,
                              "maximum": 32767
                            },
                            "reason": {
                              "type": "string",
                              "nullable": true,
                              "maxLength": 200,
                              "pattern": "^(?!\\s)[0-9A-Za-zĄÀÁÂÃÄÅÇĆÈÉÊËĘÌÍÎÏŁÑŃÒÓÔÕÖŚÙÚÛÜÝŹŻąàáâãäåæçćèéêëęìíîïłñńòóôõöśùúûüýÿźżß`\\'()\\- ]+(?<!\\s)$"
                            }
                          },
                          "required": [
                            "type",
                            "height",
                            "width",
                            "page",
                            "x",
                            "y"
                          ]
                        },
                        {
                          "title": "CreateElectronicSealFieldReadOnlyTextPayload",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "read_only_text"
                              ],
                              "example": "read_only_text"
                            },
                            "height": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 32767,
                              "example": 200
                            },
                            "width": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 32767,
                              "example": 250
                            },
                            "page": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 32767,
                              "example": 1
                            },
                            "x": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 32767,
                              "example": 0
                            },
                            "y": {
                              "type": "integer",
                              "example": 0,
                              "minimum": 0,
                              "maximum": 32767
                            },
                            "text": {
                              "type": "string",
                              "maxLength": 80
                            }
                          },
                          "required": [
                            "type",
                            "height",
                            "width",
                            "page",
                            "x",
                            "y"
                          ]
                        }
                      ],
                      "type": "object"
                    }
                  }
                },
                "required": [
                  "document_id",
                  "fields"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ElectronicSeal",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "1365283d-0ba5-4a08-9a58-9818ef428320",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "processing",
                        "done",
                        "error"
                      ],
                      "example": "pending"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-18T22:59:00+00:00"
                    },
                    "document_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "37646975-7e73-41f1-be7f-f4d85d181d03",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    },
                    "timestamp": {
                      "type": "boolean"
                    },
                    "image_id": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true,
                      "example": "6c82bd7a-d7f7-45e0-82f4-b92222567346",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    },
                    "external_id": {
                      "type": "string",
                      "pattern": "^[\\w\\-@.%+]+$",
                      "example": "externalId-123",
                      "maxLength": 255,
                      "description": "Store a custom id that will be added to webhooks",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "status",
                    "created_at",
                    "document_id",
                    "timestamp",
                    "image_id",
                    "external_id"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        },
        "tags": [
          "Electronic Seal"
        ]
      },
      "parameters": []
    },
    "/electronic_seals/{electronicSealId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "electronicSealId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get electronic seal",
        "responses": {
          "200": {
            "description": "Electronic seal",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1electronic_seals/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "get-electronic-seal",
        "description": "Get an electronic seal",
        "tags": [
          "Electronic Seal"
        ]
      }
    },
    "/electronic_seal_images": {
      "post": {
        "operationId": "uploadElectronicSealImage",
        "summary": "Upload electronic seal image",
        "description": "Upload electronic seal image",
        "tags": [
          "Electronic Seal"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Seal image"
                  },
                  "name": {
                    "type": "string",
                    "example": "My seal image"
                  }
                },
                "required": [
                  "file",
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Electronic seal image",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "1365283d-0ba5-4a08-9a58-9818ef428320",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    },
                    "name": {
                      "type": "string",
                      "example": "My seal image"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-18T22:59:00+00:00"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "created_at"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/electronic_seal_documents": {
      "post": {
        "operationId": "uploadElectronicSealDocument",
        "summary": "Upload electronic seal document",
        "description": "Upload electronic seal document",
        "tags": [
          "Electronic Seal"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "PDF file"
                  },
                  "password": {
                    "type": "string",
                    "example": "MyPa$$word"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Electronic seal document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "1365283d-0ba5-4a08-9a58-9818ef428320",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-18T22:59:00+00:00"
                    }
                  },
                  "required": [
                    "id",
                    "created_at"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/electronic_seal_documents/{id}/download": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Download electronic seal document",
        "responses": {
          "200": {
            "description": "Return an application/pdf document",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "operationId": "download-electronic-seal-document",
        "description": "Download electronic seal document",
        "tags": [
          "Electronic Seal"
        ]
      }
    },
    "/electronic_seals/{electronicSealId}/audit_trails/download": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "electronicSealId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "operationId": "downloadElectronicSealAuditTrail",
        "summary": "Download electronic seal audit trail",
        "description": "Download electronic seal audit trail",
        "tags": [
          "Electronic Seal"
        ],
        "responses": {
          "200": {
            "description": "Return an application/pdf audit trail",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/electronic_seals/{electronicSealId}/audit_trails": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "electronicSealId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "operationId": "getElectronicSealAuditTrail",
        "summary": "Get electronic seal audit trail",
        "description": "Get electronic seal audit trail",
        "tags": [
          "Electronic Seal"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "number"
                    },
                    "classification": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "object"
                    },
                    "seal": {
                      "type": "object"
                    },
                    "document": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "version",
                    "classification",
                    "organization",
                    "seal",
                    "document"
                  ],
                  "x-examples": {
                    "example-1": {
                      "version": 1,
                      "classification": "Confidential",
                      "organization": {
                        "id": "d89a0f7b-bd3f-494d-ab61-71b69f24a3d9",
                        "name": "Universalt Music"
                      },
                      "signer": {
                        "id": "44e4b0f8-55c9-48a9-803f-d89957525270",
                        "created_at": "2021-07-05 12:21:42.352630",
                        "seal_process_completed_at": "2021-07-05 12:21:43.656000",
                        "ip_address": "172.18.0.1"
                      },
                      "documents": {
                        "id": "a9534a42-bbc1-4355-b270-58f315eda779",
                        "initial_storage_id": "fdad7bcf-73d5-4a73-945d-ba7b738c530b",
                        "initial_hash": {
                          "algorithm": "sha256",
                          "value": "8decc8571946d4cd70a024949e033a2a2a54377fe9f1c1b944c20f9ee11a9e51"
                        },
                        "mime_type": "application/pdf",
                        "seals": [
                          {
                            "reason": "Signed by Yousign",
                            "hash": {
                              "algorithm": "sha256",
                              "value": "4396f6a9f0554928f7bcc8e645a6441cb432c1606137ac8f3a735aef83946974"
                            },
                            "timestamp": false,
                            "certificate": {
                              "dn": "CN=Yousign, C=FR, O=Yousign, OU=794513986, serialNumber=2019-02-15 10:07:35:938",
                              "oid": "1.2.250.1.302.1.7.1.0",
                              "generated_at": "2019-02-15 09:07:36.000000",
                              "hash": {
                                "algorithm": "sha256",
                                "value": "69570e2d5cc2b352b2249ba32b16195722099a89aa35de71ee1e745f771d66c5"
                              },
                              "content": "-----BEGIN CERTIFICATE-----\nMIIF8DCCA9igAwIBAgIIdfWiF8OAJo0wDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBTSUdOMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTkwMjE1MDg1NzM2WhcNMjIwMjE0\nMDkwNzAwWjBnMRAwDgYDVQQDDAdZb3VzaWduMSAwHgYDVQQFExcyMDE5LTAyLTE1\nIDEwOjA3OjM1OjkzODESMBAGA1UECwwJNzk0NTEzOTg2MRAwDgYDVQQKDAdZb3Vz\naWduMQswCQYDVQQGEwJGUjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAIWI+w9xQ9uSt4Lb/l14Yu8yRvCWer06bzm5RFvqgZRiD2Cq2Vx8LNzi0pGCxBdI\nQ9nlWcxCAh67Lp/OygCKpUN2DnNiIiORK5b283VKASlGMy5frVOCKiq2YCz0vA6k\npIqzBP7DKV/CsZ3EqP0uw9C12EH3PrBJGQq4WOZI1Q5Fs2JAhOwfq/wq2orG424y\n0A9+smh8J3DjwSCoMQZrdHd/obK3w8AaTGI535dqWIZ0wKTZBZ7xahGAPGXo9cy9\nUXFtazxWGIcu5uYjRLtlUyialcUgB0db1eyOzFoRJCsaE6s7QgBhQUUfDkXs1UIp\nD0BfB/K2kPxGENm2Uk6WAfcCAwEAAaOCAYYwggGCMAwGA1UdEwEB/wQCMAAwHwYD\nVR0jBBgwFoAUzmRTx3jf2iI16mJGhB48l67NzPUwSwYDVR0gBEQwQjBABgoqgXoB\ngi4BBwEAMDIwMAYIKwYBBQUHAgEWJGh0dHA6Ly95b3VzaWduLmZyL2ZyL3B1Ymxp\nYy9kb2N1bWVudDAgBgNVHSUEGTAXBgorBgEEAYI3CgMMBgkqhkiG9y8BAQUwgbIG\nA1UdHwSBqjCBpzA1oDOgMYYvaHR0cDovL3RtcC55b3VzaWduLmZyL2NybC95b3Vz\naWduc2Fzc2lnbjJjYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAyLnlvdXNpZ24uZnIv\nY3JsL3lvdXNpZ25zYXNzaWduMmNhLmNybDA2oDSgMoYwaHR0cDovL3RtcDMueW91\nc2lnbi5mci9jcmwveW91c2lnbnNhc3NpZ24yY2EuY3JsMB0GA1UdDgQWBBTgXAE8\nONE89UOu8TjrtBH9cbd92jAOBgNVHQ8BAf8EBAMCBkAwDQYJKoZIhvcNAQELBQAD\nggIBAAF+VPpcphjyoU8RvQO14ojWV51wJxsx5ShsvtXPsQ7dBws8XmthuTyyYxtM\nE3dldkJsaQt8vK7/AUURwO7YX7PHVlwIqm2kpNThZ4+sEib3SOivP8vpfIP3mD0+\nIFREI/8adIWYyiYzp1xjuuAoZ6lyg2JsOQ/67nyS+y7sUQ++GfQulb5yjkMytmYs\nPJ0uyjnNAI/+hy4okIY7qgHFZaDGBSqdGU28NZcCEeBLwjcH4ET2Q1LvJ7nkKQMM\ncxw+TXdy7cgIAjdfCymjJ701s43JKI01NFrNZ0I20jTOuh2qB4Kf8fQFwmutTnRM\nP4ZglXsXZkyL9snUWwMSAP9QP13fPD6EDTTshyijvwHb6zbrFg3U7J0m/Sjmqp2A\nzD+pj777dQ2jg0zTJ3WLOosE1/tt60ygK3HhiVnnyM8sdjTrZ6ca9++TgnRthKss\nR35c/1Be3RJtYnar2yn3bA2pklLcjnV8Q3ZSks4ll7XnEI9V8EQSNHkmno7k+asl\nWeQ8eC82fkwCwzXMLBTt1kN+0qXfpvVoSITPSVlOvdCsFCRSC3JMYHUY6c9oUUlV\nCCEBWxe/Vm8R+AG4i3zk9wIoLDLW2eeOx1G61QFtIlgJPbKRLiDZhaGZq1PN8T2o\nD/1S7m9PMISw1hrWHpJM+gZpRLsfRp5EH3ieRFzt24fpIosf\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGnDCCBISgAwIBAgIIfVpT4jgxW6cwDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBST09UMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTYwMTI3MTYyODExWhcNMjYwMTI3\nMTYyODExWjB/MSQwIgYDVQQDDBtZT1VTSUdOIFNBUyAtIFNJR04yIFRFU1QgQ0Ex\nEjAQBgNVBAsMCTc5NDUxMzk4NjEUMBIGA1UECgwLWU9VU0lHTiBTQVMxDTALBgNV\nBAcMBENBRU4xETAPBgNVBAgMCENBTFZBRE9TMQswCQYDVQQGEwJGUjCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBALUsirI2GYG9qu3U2S4V4JI0V9ohNP3W\nEpssSBcepPBV4UPtwAbFGvJqtGO/0nNZO0J7UwUb0sZBnedFl96tRQff3PECyO9k\n1B1/8rK1TbLPQPhTYWlrvX69wHXJFPxf/JkL4l4Lp6nFS80SYlaRj2RHHJ8HDj8S\nP1oULnhW2f2i8AlJwFe34eLJbWgeI5D7UAo59GMQ6bO4aVMaaDWvXsKOn8qmCUwF\ngtQNOqtYyLgURr4qivbjsZEv5H4Ee+wR5J+U6wd9dpIoTV2g1mExNlKVoj9qX9rh\n4al4G80fKNUT8bVnzxmdkDZzuzKm+rNIN6Fnc5CTHu2IcMHcuvKMRvsSJ+0fiz1E\nb/xsKO18Aiy5XOEQFqDrXRKC5AMmF/zB9Fh1Xe7Bi6IQo15NOjOCHLiBTARsMBJ8\nRWTuTv89qnL1lECogFusbptDG4Gu7Y7M13V8gOoGAxBs6uALjoseFZcnLQlIjZCV\nL0xyhrXFCLFnv4gy2+xY1bJNueD3cLFkzaxiCJ4WKesmRIfc6vHaQNl5NpU+9tFb\nU6o01c3fjZUdIh/MR3GFIXNpPsilhl///5aT5h2L98Gmb2q7tqSbFqm5z17MG3uS\ne4zCt+UD7MI8oCF2CELo79xMjtmqEwIf0IU8MxaLaLSZ0J164ZyHwvfIewgBp8XF\nqLn0jrZNiocXAgMBAAGjggEaMIIBFjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY\nMBaAFGXEFaTuRlW+zr11R8A0QEYcGvuRMIGyBgNVHR8EgaowgacwNaAzoDGGL2h0\ndHA6Ly90bXAueW91c2lnbi5mci9jcmwveW91c2lnbnNhc3Jvb3QyY2EuY3JsMDag\nNKAyhjBodHRwOi8vdG1wMi55b3VzaWduLmZyL2NybC95b3VzaWduc2Fzcm9vdDJj\nYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAzLnlvdXNpZ24uZnIvY3JsL3lvdXNpZ25z\nYXNyb290MmNhLmNybDAdBgNVHQ4EFgQUzmRTx3jf2iI16mJGhB48l67NzPUwDgYD\nVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQBZ8ru8LEQ1qzQqG/Rx420f\ncN4YNM1cXV+DwpWOw46Oh9U7BG1i/wYPy6uEZvj/n+nm/MkbajrzTViZnKMRs7Wy\nCWBqvAfl4gcbWvrRzdVwsbd3UbsxD5UD1CkJYl5/4gPvCae6YVCF9WtnH2lSy/Gv\n5bbIfyXF++iNQn+lLe59EhA3WinTql/yk/SPUNVn4/IZ0UWrw1IPS3kmnIal1mk7\npL45n5G51qAHpSbAoTsCeRBJZ6jr38n+FimZahnBZTu4+XycDVicrydpsopQiTt8\nry+mP1b9Nd4eoHR4/F/82w1rNfAM0NJKL8w3qr8lMdxsbANMvW0ixgjRnBpuRRB4\n5iUA5Mb2DbiYJARBoruYqYGya317Gcvtk4w0O48CXR+HPXygHh/63De1JdOUjSc2\nHagr6jp7NKbn/XmWBjWuoG9J9d9sC5U/mgjw5Xjf9jKGuUGz46EtlzzpojVB7fJA\nE2Ye0kOuLANpoTFAI4EJe5nTJz0HsFG3nDshsD9Mb1/kUBSGUDWijL5f0LDqf562\nkTioMpkK7ivZxQksF8+bMId5sUNrDVA/6lhn8tD5gzGacSU7IMfIH3EUKcI1NoWm\nhV+aI8EbXP6251cF74y/tejTUQLdOQ9ut3PsxYmTTDqr8RPI6UZeh2yibzSmgGwU\nfylsTiF/gVGm5cpWCrULCw==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGnDCCBISgAwIBAgIIT0TY3eM9ut0wDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBST09UMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTYwMTI3MTYyNjE2WhcNMzYwMTI3\nMTYyNjE2WjB/MSQwIgYDVQQDDBtZT1VTSUdOIFNBUyAtIFJPT1QyIFRFU1QgQ0Ex\nEjAQBgNVBAsMCTc5NDUxMzk4NjEUMBIGA1UECgwLWU9VU0lHTiBTQVMxDTALBgNV\nBAcMBENBRU4xETAPBgNVBAgMCENBTFZBRE9TMQswCQYDVQQGEwJGUjCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBALXMHUFwSacaI5TjtMRw4kJ9o1ve/IZo\noj+2HOpW3iqs74cmsYjpHbJD0UAdh3SpdlLFK1/WBf0uEbzn6z7gRfUkEAo5EnHs\nM1iTfCXWDtA+xd9X4h2UAVEdXRzglvOvT275fjI1uj9Zi4Rz95drhlGkZVCDIMuv\n7fazkT868grWSfGSUc2C8d9+kOL4pCKuSanOc/nwD61F+oQ6KeEMtmpbr57Yy+qY\ntaF6ieKiDGn0aDj3yImnA9YqfFlX4mCyn+LmiqrXyEn0Z5iYLbO0wXkyPqhcO9c9\ngS1Y8Y/1AEvxnaLlV3eG402ZYUS6tT27o+tpdCAIx+3zMhNsPI9wXUjlVr/8ts+/\nuOUUCUWoBK3J6R1zG3urCdnuor8xAaWK/OHtvg8rXoXEfi8ujWV3EbiwIwiUHVh4\nrJIE1vhsVPW/sTM9yEjRFks0swyoX6QupEuaZLV4DbmcEbmZ2XIH5Cw2c1qwUTk2\n8vQzKHszLdRb9scnjd3yHsef5ZAHS9hUoFIfG+MzINGm3U6v4exspSw/EshSavVj\nR+gL0l+sdK4L6xe++K++Gpp5xn5cZUJeg4YtdgGju7lMdGpJVVwl0Y8UAEJt9xgC\nMvGctrkoaUuBjOhrGQQITDMsNrtgi28s7rUB6k+yxcaGBBp2PyAIsIe0e1wKGm1N\nHjGtqY0IV1tFAgMBAAGjggEaMIIBFjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY\nMBaAFGXEFaTuRlW+zr11R8A0QEYcGvuRMIGyBgNVHR8EgaowgacwNaAzoDGGL2h0\ndHA6Ly90bXAueW91c2lnbi5mci9jcmwveW91c2lnbnNhc3Jvb3QyY2EuY3JsMDag\nNKAyhjBodHRwOi8vdG1wMi55b3VzaWduLmZyL2NybC95b3VzaWduc2Fzcm9vdDJj\nYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAzLnlvdXNpZ24uZnIvY3JsL3lvdXNpZ25z\nYXNyb290MmNhLmNybDAdBgNVHQ4EFgQUZcQVpO5GVb7OvXVHwDRARhwa+5EwDgYD\nVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQCuxOXQDSYF0RpYQWonRDlU\nZ64IaGJ5buU4tGzf7rAgIQdXbO/VjjfF9UsjnLopNwWkuSJvINm21obYHcoSwvpz\nlwS/3uJCLxaw5q4SVJ4x5rajh/2qtFzcThSh48rcXcqoxAmc6BzQuIOm9cFUD2Ri\nqUJmg5O+CoLuE1b4i+CsCFL3AoWnBHFZ4YtInQBFIRBhMNPICvYOCF6jjgmMxkWU\nM8SEp7FSFfsy/oPI1dt+k9JjHCXhtWO9ndLvvwvLcjqRO3ItiF9IazsNcNLhaIMA\nlvYiQ+jLpckAuTxj7XHQyJSEofTMPr+ZSgQwUc337MJyxPhTDkch5cQBfnC20Usk\nyjdwwaeiwnNMhESwgDa4Oqw5IOmq+VmqtR+9F9yxACrpyph593F1zYwv7ikik5dI\nIYACb2fKLQrcnCfhm0k1Nt9UXoc9mQzFUK0DWJNLeGJo0rfRQh5ZqhcBG2U0KZFQ\nRtQQEf3zXJxQJGlCn1UMZMJswAzfhMTdGPNzyDI2u+9Q8WT7M2f59Idiae2m79uG\nuStRwN7Vnrpa399YXixOpNTz6d0NFBOAq1Nfwy5cnQDCnT9JkrKidrFKyA21b67m\nSfJIpMSPfFbt3g0h7JPWK7OC4Ydydh92e7/IUhtkudKMoazlwSJ7484dE7NyTpol\n62H0sW/1gmFzE6/QmCUR+w==\n-----END CERTIFICATE-----"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/workspaces": {
      "get": {
        "operationId": "get-workspaces",
        "summary": "List workspaces",
        "description": "List workspaces",
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AfterCursor"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Workspace",
                        "type": "object",
                        "description": "Workspace",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "users": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                "readOnly": true
                              }
                            }
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "created_at",
                          "updated_at",
                          "users"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Pagination": {
        "description": "Cursor based pagination",
        "type": "object",
        "properties": {
          "next_cursor": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          }
        },
        "required": [
          "next_cursor"
        ]
      },
      "User": {
        "title": "User",
        "description": "User",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone_number": {
            "type": "string",
            "description": "E.164 format"
          },
          "locale": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "nullable": true
          },
          "job_title": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "boolean"
          },
          "role": {
            "type": "string",
            "enum": [
              "owner",
              "admin",
              "member"
            ]
          },
          "workspaces": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                  "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "email",
          "phone_number",
          "locale",
          "avatar",
          "job_title",
          "is_active",
          "role"
        ]
      },
      "Document": {
        "description": "Document to attach to a Signature Request",
        "type": "object",
        "title": "Document",
        "properties": {
          "id": {
            "type": "string",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872796",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "format": "uuid"
          },
          "filename": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "nature": {
            "type": "string",
            "enum": [
              "attachment",
              "signable_document"
            ]
          },
          "content_type": {
            "type": "string",
            "example": "application/pdf"
          },
          "sha256": {
            "type": "string",
            "description": "Sha256 checksum"
          },
          "is_protected": {
            "type": "boolean"
          },
          "is_signed": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "example": "2024-01-18T22:59:00+00:00",
            "format": "date-time"
          },
          "total_pages": {
            "type": "integer",
            "description": "Number of pages for signable document",
            "minimum": 1,
            "nullable": true
          },
          "is_locked": {
            "type": "boolean",
            "description": "If protected by password and not yet unlocked"
          },
          "initials": {
            "type": "object",
            "required": [
              "alignment",
              "y"
            ],
            "nullable": true,
            "properties": {
              "alignment": {
                "type": "string",
                "enum": [
                  "left",
                  "center",
                  "right"
                ],
                "description": "Initials alignment on the document"
              },
              "y": {
                "type": "integer",
                "description": " y-axis position on the document",
                "minimum": 0
              }
            }
          },
          "total_anchors": {
            "type": "integer",
            "description": "Number of parsed anchors from the document."
          }
        },
        "required": [
          "id",
          "filename",
          "nature",
          "content_type",
          "sha256",
          "is_protected",
          "is_signed",
          "created_at",
          "total_pages",
          "is_locked",
          "initials",
          "total_anchors"
        ]
      },
      "Signer": {
        "description": "Signer",
        "type": "object",
        "title": "Signer",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "format": "uuid"
          },
          "info": {
            "type": "object",
            "required": [
              "first_name",
              "last_name",
              "email",
              "phone_number",
              "locale"
            ],
            "properties": {
              "first_name": {
                "type": "string",
                "minLength": 1
              },
              "last_name": {
                "type": "string",
                "minLength": 1
              },
              "email": {
                "type": "string",
                "minLength": 1,
                "format": "email"
              },
              "phone_number": {
                "type": "string",
                "minLength": 1,
                "description": "E.164 format. Becomes mandatory if `signature_authentication_mode` requires a phone number.",
                "nullable": true
              },
              "locale": {
                "$ref": "#/components/schemas/Locale"
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "initiated",
              "notified",
              "verifying",
              "consent_given",
              "verified",
              "verification_failed",
              "processing",
              "signed"
            ],
            "minLength": 1
          },
          "fields": {
            "type": "array",
            "nullable": true,
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FieldSignature"
                },
                {
                  "$ref": "#/components/schemas/FieldText"
                },
                {
                  "$ref": "#/components/schemas/FieldMention"
                },
                {
                  "$ref": "#/components/schemas/FieldCheckbox"
                },
                {
                  "title": "FieldRadioButtonGroup",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    },
                    "document_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "radio_group"
                      ]
                    },
                    "page": {
                      "type": "number",
                      "minimum": 1
                    },
                    "optional": {
                      "type": "boolean",
                      "description": "Does the Signer has to select one of the radio buttons from this group?"
                    },
                    "radios": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 32767
                          },
                          "y": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 32767
                          },
                          "size": {
                            "type": "number",
                            "minimum": 24,
                            "maximum": 30
                          }
                        },
                        "required": [
                          "x",
                          "y",
                          "size"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "document_id",
                    "type",
                    "page",
                    "optional",
                    "radios"
                  ]
                }
              ]
            }
          },
          "signature_level": {
            "type": "string",
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "electronic_signature_with_qualified_certificate",
              "qualified_electronic_signature_mode_1"
            ],
            "default": "electronic_signature"
          },
          "signature_authentication_mode": {
            "type": "string",
            "nullable": true,
            "default": null,
            "enum": [
              null,
              "otp_email",
              "otp_sms",
              "no_otp"
            ]
          },
          "signature_link": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "nullable": true,
            "deprecated": true
          },
          "signature_image_preview": {
            "type": "string",
            "minLength": 1,
            "nullable": true
          },
          "redirect_urls": {
            "type": "object",
            "description": "",
            "required": [
              "success",
              "error"
            ],
            "properties": {
              "success": {
                "type": "string",
                "minLength": 1,
                "example": "https://example.com/success",
                "nullable": true
              },
              "error": {
                "type": "string",
                "minLength": 1,
                "example": "https://example.com/error",
                "nullable": true
              }
            }
          },
          "custom_text": {
            "type": "object",
            "required": [
              "request_subject",
              "request_body",
              "reminder_subject",
              "reminder_body"
            ],
            "properties": {
              "request_subject": {
                "type": "string",
                "minLength": 1,
                "maxLength": 150,
                "nullable": true
              },
              "request_body": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500,
                "nullable": true
              },
              "reminder_subject": {
                "type": "string",
                "minLength": 1,
                "maxLength": 150,
                "nullable": true
              },
              "reminder_body": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500,
                "nullable": true
              }
            }
          }
        },
        "required": [
          "id",
          "info",
          "status",
          "fields",
          "signature_level",
          "signature_authentication_mode",
          "signature_link",
          "signature_image_preview",
          "redirect_urls",
          "custom_text"
        ]
      },
      "EmbeddedSignerWithSignatureLink": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "minLength": 1,
            "enum": [
              "initiated",
              "notified",
              "verifying",
              "consent_given",
              "verified",
              "verification_failed",
              "processing",
              "signed"
            ]
          },
          "signature_link": {
            "nullable": true,
            "type": "string",
            "minLength": 1,
            "format": "uri"
          },
          "signature_link_expiration_date": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2024-01-18T22:59:00+00:00"
          }
        },
        "required": [
          "id",
          "status",
          "signature_link",
          "signature_link_expiration_date"
        ]
      },
      "SignerWithSignatureLink": {
        "description": "Signer with signature link",
        "type": "object",
        "title": "Signer",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "format": "uuid"
          },
          "info": {
            "type": "object",
            "required": [
              "first_name",
              "last_name",
              "email",
              "phone_number",
              "locale"
            ],
            "properties": {
              "first_name": {
                "type": "string",
                "minLength": 1
              },
              "last_name": {
                "type": "string",
                "minLength": 1
              },
              "email": {
                "type": "string",
                "minLength": 1,
                "format": "email"
              },
              "phone_number": {
                "type": "string",
                "minLength": 1,
                "description": "E.164 format. Becomes mandatory if `signature_authentication_mode` requires a phone number.",
                "nullable": true
              },
              "locale": {
                "$ref": "#/components/schemas/Locale"
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "initiated",
              "notified",
              "verifying",
              "consent_given",
              "verified",
              "verification_failed",
              "processing",
              "signed"
            ],
            "minLength": 1
          },
          "fields": {
            "type": "array",
            "nullable": true,
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FieldSignature"
                },
                {
                  "$ref": "#/components/schemas/FieldText"
                },
                {
                  "$ref": "#/components/schemas/FieldMention"
                },
                {
                  "$ref": "#/components/schemas/FieldCheckbox"
                }
              ]
            }
          },
          "signature_level": {
            "type": "string",
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "electronic_signature_with_qualified_certificate",
              "qualified_electronic_signature_mode_1"
            ],
            "default": "electronic_signature"
          },
          "signature_authentication_mode": {
            "type": "string",
            "nullable": true,
            "default": null,
            "enum": [
              null,
              "otp_email",
              "otp_sms",
              "no_otp"
            ]
          },
          "signature_link": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "nullable": true
          },
          "signature_link_expiration_date": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2024-01-18T22:59:00+00:00"
          },
          "signature_image_preview": {
            "type": "string",
            "minLength": 1,
            "nullable": true
          },
          "redirect_urls": {
            "type": "object",
            "description": "",
            "required": [
              "success",
              "error"
            ],
            "properties": {
              "success": {
                "type": "string",
                "minLength": 1,
                "example": "https://example.com/success",
                "nullable": true
              },
              "error": {
                "type": "string",
                "minLength": 1,
                "example": "https://example.com/error",
                "nullable": true
              }
            }
          },
          "custom_text": {
            "type": "object",
            "required": [
              "request_subject",
              "request_body",
              "reminder_subject",
              "reminder_body"
            ],
            "properties": {
              "request_subject": {
                "type": "string",
                "minLength": 1,
                "maxLength": 150,
                "nullable": true
              },
              "request_body": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500,
                "nullable": true
              },
              "reminder_subject": {
                "type": "string",
                "minLength": 1,
                "maxLength": 150,
                "nullable": true
              },
              "reminder_body": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500,
                "nullable": true
              }
            }
          }
        },
        "required": [
          "id",
          "info",
          "status",
          "fields",
          "signature_level",
          "signature_authentication_mode",
          "signature_link",
          "signature_link_expiration_date",
          "signature_image_preview",
          "redirect_urls",
          "custom_text"
        ]
      },
      "SignatureRequest": {
        "description": "SignatureRequest",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "ongoing",
              "done",
              "deleted",
              "expired",
              "canceled",
              "approval",
              "rejected"
            ]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "example": "signature request name"
          },
          "delivery_mode": {
            "type": "string",
            "enum": [
              "email",
              "none"
            ]
          },
          "created_at": {
            "type": "string",
            "minLength": 1,
            "example": "2024-01-18T22:59:00+00:00",
            "format": "date-time"
          },
          "ordered_signers": {
            "type": "boolean",
            "description": "Enable an ordered workflow, each signer will be requested to sign in a sequential order"
          },
          "reminder_settings": {
            "type": "object",
            "required": [
              "interval_in_days",
              "max_occurrences"
            ],
            "nullable": true,
            "properties": {
              "interval_in_days": {
                "type": "number",
                "enum": [
                  1,
                  2,
                  7,
                  14
                ]
              },
              "max_occurrences": {
                "type": "number",
                "maximum": 10,
                "minimum": 1
              }
            }
          },
          "timezone": {
            "type": "string",
            "example": "Europe/Paris"
          },
          "email_custom_note": {
            "type": "string",
            "example": "Please sign these documents as soon as possible.",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-18T22:59:00+00:00"
          },
          "source": {
            "type": "string",
            "enum": [
              "app",
              "public_api",
              "connector_hubspot_api",
              "connector_salesforce_api",
              "connector_google_api",
              "connector_zapier_api"
            ]
          },
          "signers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "initiated",
                    "notified",
                    "identified",
                    "verifying",
                    "consent_given",
                    "verified",
                    "verification_failed",
                    "processing",
                    "signed"
                  ]
                }
              },
              "required": [
                "id",
                "status"
              ]
            }
          },
          "approvers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "initiated",
                    "notified",
                    "approved",
                    "rejected"
                  ]
                }
              },
              "required": [
                "id",
                "status"
              ]
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "nature": {
                  "type": "string",
                  "enum": [
                    "attachment",
                    "signable_document"
                  ]
                }
              },
              "required": [
                "id",
                "nature"
              ]
            }
          },
          "sender": {
            "type": "object",
            "nullable": true,
            "properties": {
              "id": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          },
          "external_id": {
            "type": "string",
            "example": "An_external-ID",
            "nullable": true
          },
          "branding_id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "nullable": true,
            "deprecated": true
          },
          "custom_experience_id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "nullable": true
          },
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c"
          }
        },
        "required": [
          "id",
          "status",
          "name",
          "delivery_mode",
          "created_at",
          "ordered_signers",
          "reminder_settings",
          "timezone",
          "email_custom_note",
          "expiration_date",
          "source",
          "signers",
          "documents",
          "sender",
          "external_id",
          "branding_id",
          "custom_experience_id"
        ]
      },
      "SignatureRequestActivated": {
        "description": "SignatureRequestActivated",
        "type": "object",
        "title": "SignatureRequestActivated",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "ongoing",
              "done",
              "deleted",
              "expired",
              "canceled",
              "approval",
              "rejected"
            ]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "example": "signature request name"
          },
          "delivery_mode": {
            "type": "string",
            "enum": [
              "email",
              "none"
            ]
          },
          "created_at": {
            "type": "string",
            "minLength": 1,
            "example": "2024-01-18T22:59:00+00:00",
            "format": "date-time"
          },
          "ordered_signers": {
            "type": "boolean",
            "description": "Enable an ordered workflow, each signer will be requested to sign in a sequential order"
          },
          "reminder_settings": {
            "type": "object",
            "required": [
              "interval_in_days",
              "max_occurrences"
            ],
            "nullable": true,
            "properties": {
              "interval_in_days": {
                "type": "number",
                "enum": [
                  1,
                  2,
                  7,
                  14
                ]
              },
              "max_occurrences": {
                "type": "number",
                "maximum": 10,
                "minimum": 1
              }
            }
          },
          "timezone": {
            "type": "string",
            "example": "Europe/Paris"
          },
          "email_custom_note": {
            "type": "string",
            "example": "Please sign these documents as soon as possible.",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-18T22:59:00+00:00"
          },
          "signers": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/EmbeddedSignerWithSignatureLink"
            }
          },
          "approvers": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "description": "",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "minLength": 1,
                  "format": "uuid"
                },
                "status": {
                  "type": "string",
                  "minLength": 1,
                  "enum": [
                    "initiated",
                    "notified",
                    "approved",
                    "rejected"
                  ]
                },
                "approval_link": {
                  "nullable": true,
                  "type": "string",
                  "minLength": 1,
                  "format": "uri"
                },
                "approval_link_expiration_date": {
                  "nullable": true,
                  "type": "string",
                  "format": "date-time",
                  "example": "2024-01-18T22:59:00+00:00"
                }
              },
              "required": [
                "id",
                "status",
                "approval_link",
                "approval_link_expiration_date"
              ]
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "nature": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "nature"
              ]
            }
          },
          "external_id": {
            "type": "string",
            "maxLength": 255,
            "pattern": "^[\\w\\-@.%+]+$",
            "nullable": true
          },
          "branding_id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "nullable": true
          },
          "custom_experience_id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "nullable": true
          }
        },
        "required": [
          "id",
          "status",
          "name",
          "delivery_mode",
          "created_at",
          "ordered_signers",
          "reminder_settings",
          "timezone",
          "email_custom_note",
          "expiration_date",
          "signers",
          "documents",
          "external_id",
          "branding_id",
          "custom_experience_id"
        ]
      },
      "ViolationResponse": {
        "title": "ViolationResponse",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "detail"
        ]
      },
      "FieldCheckbox": {
        "title": "FieldCheckbox",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "document_id": {
            "type": "string",
            "format": "uuid",
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "type": {
            "type": "string",
            "enum": [
              "checkbox"
            ]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "example": "Checkbox name",
            "description": "Checkbox name",
            "nullable": true
          },
          "checked": {
            "type": "boolean",
            "description": "Signer has checked the checkbox"
          },
          "page": {
            "type": "number",
            "minimum": 1
          },
          "optional": {
            "type": "boolean"
          },
          "x": {
            "type": "number",
            "minimum": 0,
            "maximum": 32767
          },
          "y": {
            "type": "number",
            "minimum": 0,
            "maximum": 32767
          }
        },
        "required": [
          "id",
          "document_id",
          "type",
          "name",
          "checked",
          "page",
          "optional",
          "x",
          "y"
        ]
      },
      "FieldMention": {
        "title": "FieldMention",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "document_id": {
            "type": "string",
            "format": "uuid",
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "type": {
            "type": "string",
            "enum": [
              "mention"
            ]
          },
          "height": {
            "type": "number",
            "minimum": 24,
            "maximum": 24
          },
          "width": {
            "type": "number",
            "minimum": 24
          },
          "page": {
            "type": "number",
            "minimum": 1
          },
          "x": {
            "type": "number",
            "minimum": 0,
            "maximum": 32767
          },
          "y": {
            "type": "number",
            "minimum": 0,
            "maximum": 32767
          },
          "mention": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "document_id",
          "type",
          "height",
          "width",
          "page",
          "x",
          "y",
          "mention"
        ]
      },
      "FieldSignature": {
        "title": "FieldSignature",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "document_id": {
            "type": "string",
            "format": "uuid",
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "type": {
            "type": "string",
            "enum": [
              "signature"
            ]
          },
          "height": {
            "type": "number",
            "minimum": 37,
            "maximum": 32767
          },
          "width": {
            "type": "number",
            "minimum": 85,
            "maximum": 32767
          },
          "page": {
            "type": "number",
            "minimum": 1
          },
          "x": {
            "type": "number",
            "minimum": 0,
            "maximum": 32767
          },
          "y": {
            "type": "number",
            "minimum": 0,
            "maximum": 32767
          }
        },
        "required": [
          "id",
          "document_id",
          "type",
          "height",
          "width",
          "page",
          "x",
          "y"
        ]
      },
      "FieldsInput": {
        "oneOf": [
          {
            "properties": {
              "document_id": {
                "type": "string",
                "format": "uuid",
                "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "type": {
                "type": "string",
                "enum": [
                  "signature"
                ]
              },
              "height": {
                "type": "number",
                "minimum": 37,
                "maximum": 32767,
                "description": "Default value is 37"
              },
              "width": {
                "type": "number",
                "minimum": 85,
                "maximum": 32767,
                "description": "Default value is 85"
              },
              "page": {
                "type": "number",
                "minimum": 1
              },
              "x": {
                "type": "number",
                "minimum": 0,
                "maximum": 32767
              },
              "y": {
                "type": "number",
                "minimum": 0,
                "maximum": 32767
              },
              "size": {
                "type": "number",
                "minimum": 24,
                "maximum": 30
              }
            },
            "required": [
              "document_id",
              "type",
              "page",
              "x",
              "y"
            ]
          },
          {
            "properties": {
              "document_id": {
                "type": "string",
                "format": "uuid",
                "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "type": {
                "type": "string",
                "enum": [
                  "mention"
                ]
              },
              "width": {
                "type": "number",
                "minimum": 24,
                "description": "If not set, the width is automatically calculated with the mention length"
              },
              "page": {
                "type": "number",
                "minimum": 1
              },
              "x": {
                "type": "number",
                "minimum": 0,
                "maximum": 32767
              },
              "y": {
                "type": "number",
                "minimum": 0,
                "maximum": 32767
              },
              "mention": {
                "type": "string"
              }
            },
            "required": [
              "document_id",
              "type",
              "page",
              "x",
              "y",
              "mention"
            ]
          },
          {
            "properties": {
              "document_id": {
                "type": "string",
                "format": "uuid",
                "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "type": {
                "type": "string",
                "enum": [
                  "text"
                ]
              },
              "width": {
                "type": "number",
                "minimum": 24,
                "example": 90,
                "description": "If not set, the width is automatically calculated with the max_length value"
              },
              "height": {
                "type": "number",
                "minimum": 24,
                "example": 150,
                "description": "The height must be 24 or a multiple of 15 greater than 24. If height is provided, max_length must be less than or equal to the maximum number of characters based on the width and height of the text field."
              },
              "page": {
                "type": "number",
                "minimum": 1
              },
              "x": {
                "type": "number",
                "minimum": 0,
                "maximum": 32767
              },
              "y": {
                "type": "number",
                "minimum": 0,
                "maximum": 32767
              },
              "max_length": {
                "type": "integer",
                "minimum": 1,
                "maximum": 32767
              },
              "question": {
                "type": "string",
                "example": "Where is Brian ?",
                "maxLength": 255
              },
              "instruction": {
                "type": "string",
                "example": "Give Brian's location",
                "nullable": true
              },
              "optional": {
                "type": "boolean"
              }
            },
            "required": [
              "document_id",
              "type",
              "page",
              "x",
              "y",
              "max_length",
              "question",
              "optional"
            ]
          },
          {
            "properties": {
              "document_id": {
                "type": "string",
                "format": "uuid",
                "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "type": {
                "type": "string",
                "enum": [
                  "checkbox"
                ]
              },
              "page": {
                "type": "number",
                "minimum": 1
              },
              "x": {
                "type": "number",
                "minimum": 0,
                "maximum": 32767
              },
              "y": {
                "type": "number",
                "minimum": 0,
                "maximum": 32767
              },
              "optional": {
                "type": "boolean"
              },
              "name": {
                "type": "string",
                "example": "Checkbox 1",
                "nullable": true
              },
              "checked": {
                "type": "boolean"
              }
            },
            "required": [
              "document_id",
              "type",
              "page",
              "x",
              "y",
              "optional",
              "checked"
            ]
          },
          {
            "properties": {
              "document_id": {
                "type": "string",
                "format": "uuid",
                "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "type": {
                "type": "string",
                "enum": [
                  "radio_group"
                ]
              },
              "page": {
                "type": "number",
                "minimum": 1
              },
              "optional": {
                "type": "boolean"
              },
              "radios": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "x": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 32767
                    },
                    "y": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 32767
                    }
                  },
                  "required": [
                    "x",
                    "y"
                  ]
                }
              }
            },
            "required": [
              "document_id",
              "type",
              "page",
              "optional",
              "radios"
            ]
          }
        ],
        "type": "object"
      },
      "FieldText": {
        "title": "FieldText",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "document_id": {
            "type": "string",
            "format": "uuid",
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          "type": {
            "type": "string",
            "enum": [
              "text"
            ]
          },
          "width": {
            "type": "number",
            "minimum": 24,
            "example": 90,
            "description": "If not set, the width is automatically calculated with the max_length value"
          },
          "height": {
            "type": "number",
            "minimum": 24,
            "example": 150,
            "description": "The height must be 24 or a multiple of 15 greater than 24. If height is provided, max_length must be less than or equal to the maximum number of characters based on the width and height of the text field."
          },
          "page": {
            "type": "number",
            "minimum": 1
          },
          "x": {
            "type": "number",
            "minimum": 0,
            "maximum": 32767
          },
          "y": {
            "type": "number",
            "minimum": 0,
            "maximum": 32767
          },
          "question": {
            "type": "string",
            "example": "Where is Brian ?",
            "maxLength": 255
          },
          "instruction": {
            "type": "string",
            "nullable": true,
            "example": "Give Brian's location"
          },
          "optional": {
            "type": "boolean"
          },
          "answer": {
            "type": "string",
            "nullable": true,
            "example": "Brian is in the kitchen !"
          },
          "max_length": {
            "type": "integer",
            "minimum": 1,
            "maximum": 32767
          }
        },
        "required": [
          "id",
          "document_id",
          "type",
          "height",
          "width",
          "page",
          "x",
          "y",
          "question",
          "instruction",
          "optional",
          "answer",
          "max_length"
        ]
      },
      "WebhookSubscription": {
        "title": "WebhookSubscription",
        "type": "object",
        "description": "WebhookSubscription",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795"
          },
          "endpoint": {
            "type": "string",
            "maxLength": 255,
            "description": "Https target URL of the webhook"
          },
          "description": {
            "type": "string",
            "maxLength": 128,
            "example": "Lorem Ipsum",
            "description": "Short description of the webhook",
            "nullable": true
          },
          "sandbox": {
            "type": "boolean",
            "example": false
          },
          "subscribed_events": {
            "oneOf": [
              {
                "description": "Specific events",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "signature_request.done",
                    "signature_request.activated",
                    "signature_request.reminder_executed",
                    "signature_request.expired",
                    "signature_request.approved",
                    "signer.done",
                    "signer.notified",
                    "signer.link_opened",
                    "signer.identification_blocked",
                    "signer.sender_contacted",
                    "signer.error",
                    "contact.created",
                    "approver.notified",
                    "approver.approved",
                    "approver.rejected",
                    "electronic_seal.error",
                    "electronic_seal.done"
                  ]
                }
              },
              {
                "description": "All events",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "*"
                  ]
                }
              }
            ]
          },
          "secret_key": {
            "type": "string",
            "description": "Autogenerated 32 bytes key"
          },
          "scopes": {
            "oneOf": [
              {
                "description": "Specific scopes",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "app",
                    "public_api",
                    "connector_salesforce_api",
                    "connector_hubspot_api"
                  ]
                }
              },
              {
                "description": "All scopes",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "*"
                  ]
                }
              }
            ]
          },
          "auto_retry": {
            "type": "boolean",
            "description": "If a Webhook request fails for any reason, Yousign will retry the request 8 times using a back-off mechanism after: 2, 6, 30, 60, 300, 1080, 1440, 2880 min"
          },
          "enabled": {
            "type": "boolean",
            "description": "Is the webhook enabled ?"
          },
          "created_at": {
            "type": "string",
            "example": "2024-01-18T22:59:00+00:00",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2024-01-18T22:59:00+00:00",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "endpoint",
          "description",
          "sandbox",
          "subscribed_events",
          "secret_key",
          "scopes",
          "auto_retry",
          "enabled",
          "created_at",
          "updated_at"
        ]
      },
      "UploadDocumentInput": {
        "title": "UploadDocumentInput",
        "type": "object",
        "description": "Upload a document",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "example": "Binary file"
          },
          "nature": {
            "type": "string",
            "enum": [
              "attachment",
              "signable_document"
            ]
          },
          "password": {
            "type": "string",
            "example": "MyPa$$word"
          },
          "parse_anchors": {
            "type": "boolean"
          },
          "initials": {
            "$ref": "#/components/schemas/InitialsArea"
          }
        },
        "required": [
          "file",
          "nature"
        ]
      },
      "InitialsArea": {
        "title": "InitialsArea",
        "type": "object",
        "properties": {
          "alignment": {
            "type": "string",
            "enum": [
              "left",
              "right",
              "center"
            ],
            "description": "Initials alignment on the document"
          },
          "y": {
            "type": "integer",
            "minimum": 0,
            "example": 10,
            "description": "y-axis position on the document"
          }
        },
        "required": [
          "alignment",
          "y"
        ]
      },
      "SignatureRequest_SignerFromContactIdInput": {
        "title": "SignatureRequest_SignerFromContactIdInput",
        "type": "object",
        "description": "Create signer from a contact",
        "properties": {
          "contact_id": {
            "type": "string",
            "description": "Create signer from an existing contact",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "example": "ddecfb85-8a45-4254-b940-6171b8df0a90",
            "format": "uuid"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldsInput"
            }
          },
          "signature_level": {
            "type": "string",
            "default": "electronic_signature",
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "electronic_signature_with_qualified_certificate",
              "qualified_electronic_signature_mode_1"
            ]
          },
          "signature_authentication_mode": {
            "type": "string",
            "nullable": true,
            "default": null,
            "enum": [
              null,
              "otp_email",
              "otp_sms",
              "no_otp"
            ]
          },
          "redirect_urls": {
            "type": "object",
            "properties": {
              "success": {
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "nullable": true
              },
              "error": {
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "nullable": true
              }
            }
          },
          "custom_text": {
            "type": "object",
            "properties": {
              "request_subject": {
                "type": "string",
                "minLength": 1,
                "maxLength": 150,
                "nullable": true
              },
              "request_body": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500,
                "nullable": true
              },
              "reminder_subject": {
                "type": "string",
                "minLength": 1,
                "maxLength": 150,
                "nullable": true
              },
              "reminder_body": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500,
                "nullable": true
              }
            }
          }
        },
        "required": [
          "contact_id",
          "signature_level"
        ]
      },
      "SignatureRequest_SignerFromInfoInput": {
        "title": "SignatureRequest_SignerFromInfoInput",
        "type": "object",
        "description": "Create a signer from info",
        "properties": {
          "info": {
            "type": "object",
            "description": "create new signer",
            "required": [
              "first_name",
              "last_name",
              "email",
              "locale"
            ],
            "properties": {
              "first_name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 255
              },
              "last_name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 255
              },
              "email": {
                "type": "string",
                "minLength": 1,
                "format": "email"
              },
              "phone_number": {
                "type": "string",
                "minLength": 1,
                "description": "E.164 format. Becomes mandatory if `signature_authentication_mode` requires a phone number.",
                "nullable": true
              },
              "locale": {
                "$ref": "#/components/schemas/Locale"
              }
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldsInput"
            }
          },
          "signature_level": {
            "type": "string",
            "default": "electronic_signature",
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "electronic_signature_with_qualified_certificate",
              "qualified_electronic_signature_mode_1"
            ]
          },
          "signature_authentication_mode": {
            "type": "string",
            "nullable": true,
            "default": null,
            "enum": [
              null,
              "otp_email",
              "otp_sms",
              "no_otp"
            ]
          },
          "redirect_urls": {
            "type": "object",
            "properties": {
              "success": {
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "nullable": true
              },
              "error": {
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "nullable": true
              }
            }
          },
          "custom_text": {
            "type": "object",
            "properties": {
              "request_subject": {
                "type": "string",
                "minLength": 1,
                "maxLength": 150,
                "nullable": true
              },
              "request_body": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500,
                "nullable": true
              },
              "reminder_subject": {
                "type": "string",
                "minLength": 1,
                "maxLength": 150,
                "nullable": true
              },
              "reminder_body": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500,
                "nullable": true
              }
            }
          }
        },
        "required": [
          "info",
          "signature_level"
        ]
      },
      "SignatureRequest_SignerFromUserIdInput": {
        "title": "SignatureRequest_SignerFromUserIdInput",
        "type": "object",
        "description": "Create a signer from a user",
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
            "description": "Create signer from an existing user"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldsInput"
            }
          },
          "signature_level": {
            "type": "string",
            "default": "electronic_signature",
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "electronic_signature_with_qualified_certificate",
              "qualified_electronic_signature_mode_1"
            ]
          },
          "signature_authentication_mode": {
            "type": "string",
            "nullable": true,
            "default": null,
            "enum": [
              null,
              "otp_email",
              "otp_sms",
              "no_otp"
            ]
          },
          "redirect_urls": {
            "type": "object",
            "properties": {
              "success": {
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "nullable": true
              },
              "error": {
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "nullable": true
              }
            }
          },
          "custom_text": {
            "type": "object",
            "properties": {
              "request_subject": {
                "type": "string",
                "minLength": 1,
                "maxLength": 150,
                "nullable": true
              },
              "request_body": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500,
                "nullable": true
              },
              "reminder_subject": {
                "type": "string",
                "minLength": 1,
                "maxLength": 150,
                "nullable": true
              },
              "reminder_body": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500,
                "nullable": true
              }
            }
          }
        },
        "required": [
          "user_id",
          "signature_level"
        ]
      },
      "Contact": {
        "title": "Contact",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "locale": {
            "type": "string"
          },
          "phone_number": {
            "type": "string",
            "description": "E.164 format",
            "nullable": true
          },
          "company_name": {
            "type": "string",
            "nullable": true
          },
          "job_title": {
            "type": "string",
            "nullable": true
          },
          "address_line_1": {
            "type": "string",
            "nullable": true
          },
          "address_line_2": {
            "type": "string",
            "nullable": true
          },
          "address_city": {
            "type": "string",
            "nullable": true
          },
          "address_postal_code": {
            "type": "string",
            "nullable": true
          },
          "address_country": {
            "type": "string",
            "nullable": true
          },
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c"
          }
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "email",
          "locale",
          "phone_number",
          "company_name",
          "job_title",
          "address_line_1",
          "address_line_2",
          "address_city",
          "address_postal_code",
          "address_country"
        ],
        "description": ""
      },
      "Locale": {
        "type": "string",
        "enum": [
          "en",
          "fr",
          "de",
          "it",
          "nl",
          "es",
          "pl"
        ],
        "minLength": 1
      },
      "CustomExperienceInput": {
        "title": "CustomExperienceInput",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "landing_page_disabled": {
            "type": "boolean",
            "nullable": true,
            "default": false
          },
          "side_panel_disabled": {
            "type": "boolean",
            "nullable": true,
            "default": false
          },
          "background_color": {
            "type": "string",
            "nullable": true
          },
          "button_color": {
            "type": "string",
            "nullable": true
          },
          "text_color": {
            "type": "string",
            "nullable": true
          },
          "text_button_color": {
            "type": "string",
            "nullable": true
          },
          "disabled_notifications": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomExperience_DisabledNotificationsType"
            }
          },
          "email_logo_disabled": {
            "type": "boolean",
            "nullable": true,
            "default": false
          },
          "email_header_text_disabled": {
            "type": "boolean",
            "nullable": true,
            "default": false
          },
          "email_footer_signature_disabled": {
            "type": "boolean",
            "nullable": true,
            "default": false
          },
          "email_expiration_text_disabled": {
            "type": "boolean",
            "nullable": true,
            "default": false
          },
          "redirect_urls": {
            "type": "object",
            "nullable": true,
            "required": [
              "success",
              "error"
            ],
            "properties": {
              "success": {
                "type": "string"
              },
              "error": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "CustomExperience_Source": {
        "title": "CustomExperience_Source",
        "type": "string",
        "nullable": true,
        "enum": [
          "app",
          "public_api"
        ],
        "example": "app",
        "description": "Custom Experience Source"
      },
      "CustomExperience_DisabledNotificationsType": {
        "title": "CustomExperience_DisabledNotificationsType",
        "type": "string",
        "enum": [
          "approver.expiration_date_reminder",
          "approver.canceled",
          "approver.expiration_date_updated",
          "follower.approved",
          "follower.canceled",
          "follower.completed",
          "follower.expired",
          "follower.rejected",
          "follower.signed",
          "sender.approved",
          "sender.canceled",
          "sender.completed",
          "sender.rejected",
          "sender.signed",
          "signer.expiration_date_reminder",
          "signer.canceled",
          "signer.completed",
          "signer.signed",
          "signer.expiration_date_updated"
        ],
        "example": "approver.canceled"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ]
            }
          }
        },
        "headers": {}
      },
      "NotFoundError": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "ForbiddenError": {
        "description": "Access forbidden",
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "BadRequestError": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ViolationResponse"
            }
          }
        }
      },
      "NoContent": {
        "description": "The resource was deleted successfully"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "parameters": {
      "AfterCursor": {
        "name": "after",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "After cursor (pagination)"
      }
    }
  },
  "tags": [
    {
      "name": "Approver"
    },
    {
      "name": "Consumption"
    },
    {
      "name": "Contact"
    },
    {
      "name": "Custom Experience"
    },
    {
      "name": "Document"
    },
    {
      "name": "Electronic Seal"
    },
    {
      "name": "Fields"
    },
    {
      "name": "Follower"
    },
    {
      "name": "Signature Request"
    },
    {
      "name": "Signer"
    },
    {
      "name": "User"
    },
    {
      "name": "Webhook"
    },
    {
      "name": "Workspace"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}
